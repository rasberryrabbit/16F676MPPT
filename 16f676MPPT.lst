;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2018-11-27 ¿ÀÈÄ 9:38:09
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28C8      	GOTO       200
_Interrupt:
0x0004	0x00DF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00C2      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00C1      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;16F676MPPT.mpas,65 :: 		begin
;16F676MPPT.mpas,66 :: 		if T0IF_bit=1 then begin
0x000B	0x1D0B      	BTFSS      T0IF_bit, BitPos(T0IF_bit+0)
0x000C	0x281E      	GOTO       L__Interrupt3
;16F676MPPT.mpas,67 :: 		PWM_SIG:=not PWM_SIG;
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x3002      	MOVLW      2
0x000F	0x0687      	XORWF      RC1_bit, 1
;16F676MPPT.mpas,68 :: 		if PWM_SIG=0 then begin
0x0010	0x1887      	BTFSC      RC1_bit, BitPos(RC1_bit+0)
0x0011	0x2818      	GOTO       L__Interrupt6
;16F676MPPT.mpas,70 :: 		ON_PWM:=VOLPWM;
0x0012	0x0848      	MOVF       _VOLPWM, 0
0x0013	0x00C9      	MOVWF      _ON_PWM
;16F676MPPT.mpas,71 :: 		TMR0:=255-ON_PWM;
0x0014	0x0848      	MOVF       _VOLPWM, 0
0x0015	0x3CFF      	SUBLW      255
0x0016	0x0081      	MOVWF      TMR0
;16F676MPPT.mpas,72 :: 		end else begin
0x0017	0x281D      	GOTO       L__Interrupt7
L__Interrupt6:
;16F676MPPT.mpas,74 :: 		TMR0:=255-PWM_MAX+ON_PWM;
0x0018	0x0849      	MOVF       _ON_PWM, 0
0x0019	0x3E05      	ADDLW      5
0x001A	0x0081      	MOVWF      TMR0
;16F676MPPT.mpas,75 :: 		doADCRead:=1;
0x001B	0x3001      	MOVLW      1
0x001C	0x00BC      	MOVWF      _doADCRead
;16F676MPPT.mpas,76 :: 		end;
L__Interrupt7:
;16F676MPPT.mpas,77 :: 		T0IF_bit:=0;
0x001D	0x110B      	BCF        T0IF_bit, BitPos(T0IF_bit+0)
;16F676MPPT.mpas,78 :: 		end;
L__Interrupt3:
0x001E	0x1283      	BCF        STATUS, 5
;16F676MPPT.mpas,79 :: 		if T1IF_bit=1 then begin
0x001F	0x1C0C      	BTFSS      T1IF_bit, BitPos(T1IF_bit+0)
0x0020	0x2829      	GOTO       L__Interrupt9
;16F676MPPT.mpas,80 :: 		TMR1H:=TMR1H_LOAD;
0x0021	0x30F8      	MOVLW      248
0x0022	0x008F      	MOVWF      TMR1H
;16F676MPPT.mpas,81 :: 		TMR1L:=TMR1L_LOAD;
0x0023	0x3030      	MOVLW      48
0x0024	0x008E      	MOVWF      TMR1L
;16F676MPPT.mpas,82 :: 		T1IF_bit:=0;
0x0025	0x100C      	BCF        T1IF_bit, BitPos(T1IF_bit+0)
;16F676MPPT.mpas,83 :: 		Inc(TICK_1000);
0x0026	0x0ABD      	INCF       _TICK_1000, 1
0x0027	0x1903      	BTFSC      STATUS, 2
0x0028	0x0ABE      	INCF       _TICK_1000+1, 1
;16F676MPPT.mpas,84 :: 		end;
L__Interrupt9:
;16F676MPPT.mpas,85 :: 		end;
L_end_Interrupt:
L__Interrupt65:
0x0029	0x0841      	MOVF       ___savePCLATH, 0
0x002A	0x008A      	MOVWF      PCLATH
0x002B	0x0E42      	SWAPF      ___saveSTATUS, 0
0x002C	0x0083      	MOVWF      STATUS
0x002D	0x0EDF      	SWAPF      R15, 1
0x002E	0x0E5F      	SWAPF      R15, 0
0x002F	0x0009      	RETFIE
; end of _Interrupt
_Delay_22us:
;__Lib_Delays.mpas,39 :: 		begin
;__Lib_Delays.mpas,40 :: 		Delay_us(22);
0x0030	0x3007      	MOVLW      7
0x0031	0x1283      	BCF        STATUS, 5
0x0032	0x00DD      	MOVWF      R13
L__Delay_22us5:
0x0033	0x0BDD      	DECFSZ     R13, 1
0x0034	0x2833      	GOTO       L__Delay_22us5
;__Lib_Delays.mpas,41 :: 		end;
L_end_Delay_22us:
0x0035	0x0008      	RETURN
; end of _Delay_22us
_Delay_100ms:
;__Lib_Delays.mpas,79 :: 		begin
;__Lib_Delays.mpas,80 :: 		Delay_ms(100);
0x0036	0x3082      	MOVLW      130
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x00DC      	MOVWF      R12
0x0039	0x30DD      	MOVLW      221
0x003A	0x00DD      	MOVWF      R13
L__Delay_100ms21:
0x003B	0x0BDD      	DECFSZ     R13, 1
0x003C	0x283B      	GOTO       L__Delay_100ms21
0x003D	0x0BDC      	DECFSZ     R12, 1
0x003E	0x283B      	GOTO       L__Delay_100ms21
0x003F	0x0000      	NOP
0x0040	0x0000      	NOP
;__Lib_Delays.mpas,81 :: 		end;
L_end_Delay_100ms:
0x0041	0x0008      	RETURN
; end of _Delay_100ms
_ADC_Read:
;__Lib_ADC_A_B.mpas,59 :: 		
;__Lib_ADC_A_B.mpas,61 :: 		
0x0042	0x30C3      	MOVLW      195
0x0043	0x1283      	BCF        STATUS, 5
0x0044	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_B.mpas,66 :: 		
0x0045	0x3040      	MOVLW      64
0x0046	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_B.mpas,67 :: 		
0x0047	0x30F0      	MOVLW      240
0x0048	0x1683      	BSF        STATUS, 5
0x0049	0x049F      	IORWF      ADCON1, 1
;__Lib_ADC_A_B.mpas,68 :: 		
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x179F      	BSF        ADCON0, 7
;__Lib_ADC_A_B.mpas,69 :: 		
0x004C	0x084C      	MOVF       FARG_ADC_Read_channel, 0
0x004D	0x00D0      	MOVWF      R0
0x004E	0x0DD0      	RLF        R0, 1
0x004F	0x1050      	BCF        R0, 0
0x0050	0x0DD0      	RLF        R0, 1
0x0051	0x1050      	BCF        R0, 0
0x0052	0x0850      	MOVF       R0, 0
0x0053	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_B.mpas,72 :: 		
0x0054	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_B.mpas,75 :: 		
0x0055	0x2030      	CALL       _Delay_22us
;__Lib_ADC_A_B.mpas,78 :: 		
0x0056	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_A_B.mpas,81 :: 		
L__ADC_Read9:
0x0057	0x1C9F      	BTFSS      ADCON0, 1
0x0058	0x285B      	GOTO       L__ADC_Read10
0x0059	0x0000      	NOP
0x005A	0x2857      	GOTO       L__ADC_Read9
L__ADC_Read10:
;__Lib_ADC_A_B.mpas,84 :: 		
0x005B	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_B.mpas,87 :: 		
0x005C	0x081E      	MOVF       ADRESH, 0
0x005D	0x00D1      	MOVWF      R0+1
0x005E	0x01D0      	CLRF       R0
0x005F	0x1683      	BSF        STATUS, 5
0x0060	0x081E      	MOVF       ADRESL, 0
0x0061	0x0450      	IORWF      R0, 0
0x0062	0x00CD      	MOVWF      ADC_Read_local_result
0x0063	0x0851      	MOVF       R0+1, 0
0x0064	0x00CE      	MOVWF      ADC_Read_local_result+1
0x0065	0x3000      	MOVLW      0
0x0066	0x04CE      	IORWF      ADC_Read_local_result+1, 1
;__Lib_ADC_A_B.mpas,89 :: 		
0x0067	0x084D      	MOVF       ADC_Read_local_result, 0
0x0068	0x00D0      	MOVWF      R0
0x0069	0x084E      	MOVF       ADC_Read_local_result+1, 0
0x006A	0x00D1      	MOVWF      R0+1
L_end_ADC_Read:
0x006B	0x0008      	RETURN
; end of _ADC_Read
_Mul_32x32_U:
;__Lib_Math.mpas,1774 :: 		
;__Lib_Math.mpas,1788 :: 		
0x006C	0x1283      	BCF        STATUS, 5
;__Lib_Math.mpas,1789 :: 		
0x006D	0x1303      	BCF        STATUS, 6
;__Lib_Math.mpas,1790 :: 		
0x006E	0x3022      	MOVLW      34
;__Lib_Math.mpas,1791 :: 		
0x006F	0x00DC      	MOVWF      R12
;__Lib_Math.mpas,1792 :: 		
0x0070	0x01D8      	CLRF       R8
;__Lib_Math.mpas,1793 :: 		
0x0071	0x01D9      	CLRF       R9
;__Lib_Math.mpas,1794 :: 		
0x0072	0x01DA      	CLRF       R10
;__Lib_Math.mpas,1795 :: 		
0x0073	0x01DB      	CLRF       R11
;__Lib_Math.mpas,1797 :: 		
_NEXT:
;__Lib_Math.mpas,1801 :: 		
0x0074	0x03DC      	DECF       R12, 1
;__Lib_Math.mpas,1802 :: 		
0x0075	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.mpas,1803 :: 		
0x0076	0x28A2      	GOTO       _EXIT2
;__Lib_Math.mpas,1804 :: 		
0x0077	0x1003      	BCF        STATUS, 0
;__Lib_Math.mpas,1806 :: 		
_LOOP:
;__Lib_Math.mpas,1815 :: 		
0x0078	0x0CDB      	RRF        R11, 1
;__Lib_Math.mpas,1816 :: 		
0x0079	0x0CDA      	RRF        R10, 1
;__Lib_Math.mpas,1817 :: 		
0x007A	0x0CD9      	RRF        R9, 1
;__Lib_Math.mpas,1818 :: 		
0x007B	0x0CD8      	RRF        R8, 1
;__Lib_Math.mpas,1819 :: 		
0x007C	0x0CD3      	RRF        R3, 1
;__Lib_Math.mpas,1820 :: 		
0x007D	0x0CD2      	RRF        R2, 1
;__Lib_Math.mpas,1821 :: 		
0x007E	0x0CD1      	RRF        R1, 1
;__Lib_Math.mpas,1822 :: 		
0x007F	0x0CD0      	RRF        R0, 1
;__Lib_Math.mpas,1827 :: 		
0x0080	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.mpas,1828 :: 		
0x0081	0x2874      	GOTO       _NEXT
;__Lib_Math.mpas,1829 :: 		
0x0082	0x03DC      	DECF       R12, 1
;__Lib_Math.mpas,1830 :: 		
0x0083	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.mpas,1831 :: 		
0x0084	0x2894      	GOTO       _EXIT1
;__Lib_Math.mpas,1838 :: 		
0x0085	0x0854      	MOVF       R4, 0
;__Lib_Math.mpas,1839 :: 		
0x0086	0x07D8      	ADDWF      R8, 1
;__Lib_Math.mpas,1840 :: 		
0x0087	0x0855      	MOVF       R5, 0
;__Lib_Math.mpas,1841 :: 		
0x0088	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1842 :: 		
0x0089	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.mpas,1843 :: 		
0x008A	0x07D9      	ADDWF      R9, 1
;__Lib_Math.mpas,1844 :: 		
0x008B	0x0856      	MOVF       R6, 0
;__Lib_Math.mpas,1845 :: 		
0x008C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1846 :: 		
0x008D	0x0F56      	INCFSZ     R6, 0
;__Lib_Math.mpas,1847 :: 		
0x008E	0x07DA      	ADDWF      R10, 1
;__Lib_Math.mpas,1848 :: 		
0x008F	0x0857      	MOVF       R7, 0
;__Lib_Math.mpas,1849 :: 		
0x0090	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1850 :: 		
0x0091	0x0F57      	INCFSZ     R7, 0
;__Lib_Math.mpas,1851 :: 		
0x0092	0x07DB      	ADDWF      R11, 1
;__Lib_Math.mpas,1853 :: 		
0x0093	0x2878      	GOTO       _LOOP
;__Lib_Math.mpas,1855 :: 		
_EXIT1:
;__Lib_Math.mpas,1860 :: 		
0x0094	0x0854      	MOVF       R4, 0
;__Lib_Math.mpas,1861 :: 		
0x0095	0x07D8      	ADDWF      R8, 1
;__Lib_Math.mpas,1862 :: 		
0x0096	0x0855      	MOVF       R5, 0
;__Lib_Math.mpas,1863 :: 		
0x0097	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1864 :: 		
0x0098	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.mpas,1865 :: 		
0x0099	0x07D9      	ADDWF      R9, 1
;__Lib_Math.mpas,1866 :: 		
0x009A	0x0856      	MOVF       R6, 0
;__Lib_Math.mpas,1867 :: 		
0x009B	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1868 :: 		
0x009C	0x0F56      	INCFSZ     R6, 0
;__Lib_Math.mpas,1869 :: 		
0x009D	0x07DA      	ADDWF      R10, 1
;__Lib_Math.mpas,1870 :: 		
0x009E	0x0857      	MOVF       R7, 0
;__Lib_Math.mpas,1871 :: 		
0x009F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1872 :: 		
0x00A0	0x0F57      	INCFSZ     R7, 0
;__Lib_Math.mpas,1873 :: 		
0x00A1	0x07DB      	ADDWF      R11, 1
;__Lib_Math.mpas,1876 :: 		
_EXIT2:
;__Lib_Math.mpas,1878 :: 		
L_end_Mul_32x32_U:
0x00A2	0x0008      	RETURN
; end of _Mul_32x32_U
_EEPROM_Write:
;__Lib_EEPROM.mpas,27 :: 		
;__Lib_EEPROM.mpas,28 :: 		
L__EEPROM_Write3:
0x00A3	0x1683      	BSF        STATUS, 5
0x00A4	0x1C9C      	BTFSS      EECON1, 1
0x00A5	0x28A8      	GOTO       L__EEPROM_Write4
0x00A6	0x0000      	NOP
0x00A7	0x28A3      	GOTO       L__EEPROM_Write3
L__EEPROM_Write4:
;__Lib_EEPROM.mpas,30 :: 		
0x00A8	0x084C      	MOVF       FARG_EEPROM_Write_address, 0
0x00A9	0x009B      	MOVWF      EEADR
;__Lib_EEPROM.mpas,31 :: 		
0x00AA	0x084D      	MOVF       FARG_EEPROM_Write_data_, 0
0x00AB	0x009A      	MOVWF      EEDATA
;__Lib_EEPROM.mpas,32 :: 		
0x00AC	0x139C      	BCF        EECON1, 7
;__Lib_EEPROM.mpas,33 :: 		
0x00AD	0x151C      	BSF        EECON1, 2
;__Lib_EEPROM.mpas,35 :: 		
0x00AE	0x080B      	MOVF       INTCON, 0
0x00AF	0x00D0      	MOVWF      R0
;__Lib_EEPROM.mpas,38 :: 		
0x00B0	0x138B      	BCF        INTCON, 7
;__Lib_EEPROM.mpas,39 :: 		
0x00B1	0x3055      	MOVLW      85
0x00B2	0x009D      	MOVWF      EECON2
;__Lib_EEPROM.mpas,40 :: 		
0x00B3	0x30AA      	MOVLW      170
0x00B4	0x009D      	MOVWF      EECON2
;__Lib_EEPROM.mpas,41 :: 		
0x00B5	0x149C      	BSF        EECON1, 1
;__Lib_EEPROM.mpas,45 :: 		
0x00B6	0x1BD0      	BTFSC      R0, 7
0x00B7	0x28BA      	GOTO       L__EEPROM_Write9
0x00B8	0x138B      	BCF        INTCON, 7
0x00B9	0x28BB      	GOTO       L__EEPROM_Write10
L__EEPROM_Write9:
0x00BA	0x178B      	BSF        INTCON, 7
L__EEPROM_Write10:
;__Lib_EEPROM.mpas,46 :: 		
0x00BB	0x111C      	BCF        EECON1, 2
;__Lib_EEPROM.mpas,47 :: 		
L_end_EEPROM_Write:
0x00BC	0x0008      	RETURN
; end of _EEPROM_Write
_EEPROM_Read:
;__Lib_EEPROM.mpas,13 :: 		
;__Lib_EEPROM.mpas,14 :: 		
0x00BD	0x1283      	BCF        STATUS, 5
0x00BE	0x084C      	MOVF       FARG_EEPROM_Read_address, 0
0x00BF	0x1683      	BSF        STATUS, 5
0x00C0	0x009B      	MOVWF      EEADR
;__Lib_EEPROM.mpas,15 :: 		
0x00C1	0x139C      	BCF        EECON1, 7
;__Lib_EEPROM.mpas,21 :: 		
0x00C2	0x141C      	BSF        EECON1, 0
;__Lib_EEPROM.mpas,22 :: 		
0x00C3	0x081A      	MOVF       EEDATA, 0
0x00C4	0x00D1      	MOVWF      R1
;__Lib_EEPROM.mpas,23 :: 		
0x00C5	0x0851      	MOVF       R1, 0
0x00C6	0x00D0      	MOVWF      R0
L_end_EEPROM_Read:
0x00C7	0x0008      	RETURN
; end of _EEPROM_Read
_main:
;16F676MPPT.mpas,87 :: 		begin
;16F676MPPT.mpas,88 :: 		CMCON:=7;
0x00C8	0x3007      	MOVLW      7
0x00C9	0x1283      	BCF        STATUS, 5
0x00CA	0x0099      	MOVWF      CMCON
;16F676MPPT.mpas,89 :: 		ANSEL:=%00000101;       // ADC conversion clock = fRC, RA0=Current, RA2=Voltage
0x00CB	0x3005      	MOVLW      5
0x00CC	0x1683      	BSF        STATUS, 5
0x00CD	0x0091      	MOVWF      ANSEL
;16F676MPPT.mpas,90 :: 		TRISA0_bit:=1;
0x00CE	0x1405      	BSF        TRISA0_bit, BitPos(TRISA0_bit+0)
;16F676MPPT.mpas,91 :: 		TRISA1_bit:=1;          // Vref
0x00CF	0x1485      	BSF        TRISA1_bit, BitPos(TRISA1_bit+0)
;16F676MPPT.mpas,92 :: 		TRISA2_bit:=1;
0x00D0	0x1505      	BSF        TRISA2_bit, BitPos(TRISA2_bit+0)
;16F676MPPT.mpas,93 :: 		VCFG_bit:=1;
0x00D1	0x1283      	BCF        STATUS, 5
0x00D2	0x171F      	BSF        VCFG_bit, BitPos(VCFG_bit+0)
;16F676MPPT.mpas,94 :: 		CHS1_bit:=1;
0x00D3	0x159F      	BSF        CHS1_bit, BitPos(CHS1_bit+0)
;16F676MPPT.mpas,95 :: 		ADFM_bit:=1;
0x00D4	0x179F      	BSF        ADFM_bit, BitPos(ADFM_bit+0)
;16F676MPPT.mpas,97 :: 		TRISC1_bit:=0;          // PWM
0x00D5	0x1683      	BSF        STATUS, 5
0x00D6	0x1087      	BCF        TRISC1_bit, BitPos(TRISC1_bit+0)
;16F676MPPT.mpas,98 :: 		TRISC4_bit:=0;          // LED
0x00D7	0x1207      	BCF        TRISC4_bit, BitPos(TRISC4_bit+0)
;16F676MPPT.mpas,99 :: 		TRISC3_bit:=1;          // OP-AMP Cal
0x00D8	0x1587      	BSF        TRISC3_bit, BitPos(TRISC3_bit+0)
;16F676MPPT.mpas,101 :: 		LED1:=0;
0x00D9	0x1283      	BCF        STATUS, 5
0x00DA	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
;16F676MPPT.mpas,102 :: 		PWM_SIG:=1;
0x00DB	0x1487      	BSF        RC1_bit, BitPos(RC1_bit+0)
;16F676MPPT.mpas,103 :: 		LED1_tm:=250;
0x00DC	0x30FA      	MOVLW      250
0x00DD	0x00C7      	MOVWF      _LED1_tm
;16F676MPPT.mpas,104 :: 		ON_PWM:=0;
0x00DE	0x01C9      	CLRF       _ON_PWM
;16F676MPPT.mpas,105 :: 		VOLPWM:=0;
0x00DF	0x01C8      	CLRF       _VOLPWM
;16F676MPPT.mpas,106 :: 		TICK_1000:=0;
0x00E0	0x01BD      	CLRF       _TICK_1000
0x00E1	0x01BE      	CLRF       _TICK_1000+1
;16F676MPPT.mpas,108 :: 		OPTION_REG:=%11011111;        // ~4KHz @ 4MHz, 1000000 / 4 = 3.9k
0x00E2	0x30DF      	MOVLW      223
0x00E3	0x1683      	BSF        STATUS, 5
0x00E4	0x0081      	MOVWF      OPTION_REG
;16F676MPPT.mpas,109 :: 		TMR0IE_bit:=1;
0x00E5	0x168B      	BSF        TMR0IE_bit, BitPos(TMR0IE_bit+0)
;16F676MPPT.mpas,111 :: 		LM358_diff:=cLM358_diff;
0x00E6	0x01A6      	CLRF       _LM358_diff
;16F676MPPT.mpas,112 :: 		Delay_100ms;
0x00E7	0x2036      	CALL       _Delay_100ms
;16F676MPPT.mpas,113 :: 		Delay_100ms;
0x00E8	0x2036      	CALL       _Delay_100ms
;16F676MPPT.mpas,114 :: 		ClrWDT;
0x00E9	0x0064      	CLRWDT
;16F676MPPT.mpas,116 :: 		if Write_OPAMP=0 then begin
0x00EA	0x1987      	BTFSC      RC3_bit, BitPos(RC3_bit+0)
0x00EB	0x2908      	GOTO       L__main13
;16F676MPPT.mpas,117 :: 		Delay_100ms;
0x00EC	0x2036      	CALL       _Delay_100ms
;16F676MPPT.mpas,118 :: 		Delay_100ms;
0x00ED	0x2036      	CALL       _Delay_100ms
;16F676MPPT.mpas,119 :: 		adc_cur:=ADC_Read(0);
0x00EE	0x01CC      	CLRF       FARG_ADC_Read_channel
0x00EF	0x2042      	CALL       _ADC_Read
0x00F0	0x0850      	MOVF       R0, 0
0x00F1	0x00A0      	MOVWF      _adc_cur
0x00F2	0x0851      	MOVF       R0+1, 0
0x00F3	0x00A1      	MOVWF      _adc_cur+1
;16F676MPPT.mpas,120 :: 		EEPROM_Write(0, Lo(adc_cur));
0x00F4	0x01CC      	CLRF       FARG_EEPROM_Write_address
0x00F5	0x0820      	MOVF       _adc_cur, 0
0x00F6	0x00CD      	MOVWF      FARG_EEPROM_Write_data_
0x00F7	0x20A3      	CALL       _EEPROM_Write
;16F676MPPT.mpas,121 :: 		Delay_100ms;
0x00F8	0x2036      	CALL       _Delay_100ms
;16F676MPPT.mpas,122 :: 		LED1:=1;
0x00F9	0x1607      	BSF        RC4_bit, BitPos(RC4_bit+0)
;16F676MPPT.mpas,123 :: 		Delay_ms(700);
0x00FA	0x3004      	MOVLW      4
0x00FB	0x00DB      	MOVWF      R11
0x00FC	0x308E      	MOVLW      142
0x00FD	0x00DC      	MOVWF      R12
0x00FE	0x3012      	MOVLW      18
0x00FF	0x00DD      	MOVWF      R13
L__main15:
0x0100	0x0BDD      	DECFSZ     R13, 1
0x0101	0x2900      	GOTO       L__main15
0x0102	0x0BDC      	DECFSZ     R12, 1
0x0103	0x2900      	GOTO       L__main15
0x0104	0x0BDB      	DECFSZ     R11, 1
0x0105	0x2900      	GOTO       L__main15
0x0106	0x0000      	NOP
;16F676MPPT.mpas,124 :: 		LED1:=0;
0x0107	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
;16F676MPPT.mpas,125 :: 		end;
L__main13:
;16F676MPPT.mpas,126 :: 		ClrWDT;
0x0108	0x0064      	CLRWDT
;16F676MPPT.mpas,130 :: 		Delay_100ms;
0x0109	0x2036      	CALL       _Delay_100ms
;16F676MPPT.mpas,131 :: 		LM358_diff:=EEPROM_Read(0);
0x010A	0x01CC      	CLRF       FARG_EEPROM_Read_address
0x010B	0x20BD      	CALL       _EEPROM_Read
0x010C	0x0850      	MOVF       R0, 0
0x010D	0x00A6      	MOVWF      _LM358_diff
;16F676MPPT.mpas,133 :: 		if LM358_diff>$1f then
0x010E	0x0850      	MOVF       R0, 0
0x010F	0x3C1F      	SUBLW      31
0x0110	0x1803      	BTFSC      STATUS, 0
0x0111	0x2913      	GOTO       L__main17
;16F676MPPT.mpas,134 :: 		LM358_diff:=0;
0x0112	0x01A6      	CLRF       _LM358_diff
L__main17:
;16F676MPPT.mpas,136 :: 		TMR1CS_bit:=0;
0x0113	0x1283      	BCF        STATUS, 5
0x0114	0x1090      	BCF        TMR1CS_bit, BitPos(TMR1CS_bit+0)
;16F676MPPT.mpas,141 :: 		T1CKPS1_bit:=0;
0x0115	0x1290      	BCF        T1CKPS1_bit, BitPos(T1CKPS1_bit+0)
;16F676MPPT.mpas,142 :: 		T1CKPS0_bit:=0;               // timer prescaler 1:1
0x0116	0x1210      	BCF        T1CKPS0_bit, BitPos(T1CKPS0_bit+0)
;16F676MPPT.mpas,144 :: 		TMR1L:=TMR1L_LOAD;
0x0117	0x3030      	MOVLW      48
0x0118	0x008E      	MOVWF      TMR1L
;16F676MPPT.mpas,145 :: 		TMR1H:=TMR1H_LOAD;
0x0119	0x30F8      	MOVLW      248
0x011A	0x008F      	MOVWF      TMR1H
;16F676MPPT.mpas,146 :: 		T1IF_bit:=0;
0x011B	0x100C      	BCF        T1IF_bit, BitPos(T1IF_bit+0)
;16F676MPPT.mpas,148 :: 		adc_vol:=0;
0x011C	0x01AD      	CLRF       _adc_vol
0x011D	0x01AE      	CLRF       _adc_vol+1
;16F676MPPT.mpas,149 :: 		adc_cur:=0;
0x011E	0x01A0      	CLRF       _adc_cur
0x011F	0x01A1      	CLRF       _adc_cur+1
;16F676MPPT.mpas,150 :: 		power_curr:=0;
0x0120	0x01A9      	CLRF       _power_curr
0x0121	0x01AA      	CLRF       _power_curr+1
0x0122	0x01AB      	CLRF       _power_curr+2
0x0123	0x01AC      	CLRF       _power_curr+3
;16F676MPPT.mpas,152 :: 		TMR1IE_bit:=1;
0x0124	0x1683      	BSF        STATUS, 5
0x0125	0x140C      	BSF        TMR1IE_bit, BitPos(TMR1IE_bit+0)
;16F676MPPT.mpas,153 :: 		PEIE_bit:=1;
0x0126	0x170B      	BSF        PEIE_bit, BitPos(PEIE_bit+0)
;16F676MPPT.mpas,155 :: 		GIE_bit:=1;                   // enable Interrupt
0x0127	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;16F676MPPT.mpas,157 :: 		TMR1ON_bit:=1;
0x0128	0x1283      	BCF        STATUS, 5
0x0129	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;16F676MPPT.mpas,159 :: 		VOLPWM:=PWM_MID;
0x012A	0x307D      	MOVLW      125
0x012B	0x00C8      	MOVWF      _VOLPWM
;16F676MPPT.mpas,160 :: 		flag_inc:=False;
0x012C	0x01B3      	CLRF       _flag_inc
;16F676MPPT.mpas,161 :: 		vol_prev1:=0;
0x012D	0x01AF      	CLRF       _vol_prev1
0x012E	0x01B0      	CLRF       _vol_prev1+1
;16F676MPPT.mpas,163 :: 		powertime:=0;
0x012F	0x01BA      	CLRF       _powertime
0x0130	0x01BB      	CLRF       _powertime+1
;16F676MPPT.mpas,164 :: 		prevtime:=0;
0x0131	0x01B8      	CLRF       _prevtime
0x0132	0x01B9      	CLRF       _prevtime+1
;16F676MPPT.mpas,165 :: 		voltime:=0;
0x0133	0x01A7      	CLRF       _voltime
0x0134	0x01A8      	CLRF       _voltime+1
;16F676MPPT.mpas,167 :: 		volbuf[0]:=0;
0x0135	0x01A2      	CLRF       _volbuf
0x0136	0x01A3      	CLRF       _volbuf+1
;16F676MPPT.mpas,168 :: 		volbuf[1]:=0;
0x0137	0x01A4      	CLRF       _volbuf+2
0x0138	0x01A5      	CLRF       _volbuf+3
;16F676MPPT.mpas,169 :: 		curbuf[0]:=0;
0x0139	0x01C3      	CLRF       _curbuf
0x013A	0x01C4      	CLRF       _curbuf+1
;16F676MPPT.mpas,170 :: 		curbuf[1]:=0;
0x013B	0x01C5      	CLRF       _curbuf+2
0x013C	0x01C6      	CLRF       _curbuf+3
;16F676MPPT.mpas,171 :: 		idx:=0;
0x013D	0x01CA      	CLRF       _idx
;16F676MPPT.mpas,173 :: 		clrwdt;
0x013E	0x0064      	CLRWDT
;16F676MPPT.mpas,174 :: 		delay_ms(300);
0x013F	0x3002      	MOVLW      2
0x0140	0x00DB      	MOVWF      R11
0x0141	0x3086      	MOVLW      134
0x0142	0x00DC      	MOVWF      R12
0x0143	0x3099      	MOVLW      153
0x0144	0x00DD      	MOVWF      R13
L__main19:
0x0145	0x0BDD      	DECFSZ     R13, 1
0x0146	0x2945      	GOTO       L__main19
0x0147	0x0BDC      	DECFSZ     R12, 1
0x0148	0x2945      	GOTO       L__main19
0x0149	0x0BDB      	DECFSZ     R11, 1
0x014A	0x2945      	GOTO       L__main19
;16F676MPPT.mpas,175 :: 		LED1:=1;
0x014B	0x1607      	BSF        RC4_bit, BitPos(RC4_bit+0)
;16F676MPPT.mpas,176 :: 		delay_ms(500);
0x014C	0x3003      	MOVLW      3
0x014D	0x00DB      	MOVWF      R11
0x014E	0x308A      	MOVLW      138
0x014F	0x00DC      	MOVWF      R12
0x0150	0x3055      	MOVLW      85
0x0151	0x00DD      	MOVWF      R13
L__main20:
0x0152	0x0BDD      	DECFSZ     R13, 1
0x0153	0x2952      	GOTO       L__main20
0x0154	0x0BDC      	DECFSZ     R12, 1
0x0155	0x2952      	GOTO       L__main20
0x0156	0x0BDB      	DECFSZ     R11, 1
0x0157	0x2952      	GOTO       L__main20
0x0158	0x0000      	NOP
0x0159	0x0000      	NOP
;16F676MPPT.mpas,177 :: 		LED1:=0;
0x015A	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
;16F676MPPT.mpas,178 :: 		clrwdt;
0x015B	0x0064      	CLRWDT
;16F676MPPT.mpas,180 :: 		while True do begin
L__main22:
;16F676MPPT.mpas,182 :: 		wtmp := TICK_1000;
0x015C	0x083D      	MOVF       _TICK_1000, 0
0x015D	0x00BF      	MOVWF      _wtmp
0x015E	0x083E      	MOVF       _TICK_1000+1, 0
0x015F	0x00C0      	MOVWF      _wtmp+1
;16F676MPPT.mpas,183 :: 		if wtmp - prevtime > LED1_tm then begin
0x0160	0x0838      	MOVF       _prevtime, 0
0x0161	0x023D      	SUBWF      _TICK_1000, 0
0x0162	0x00D1      	MOVWF      R1
0x0163	0x0839      	MOVF       _prevtime+1, 0
0x0164	0x1C03      	BTFSS      STATUS, 0
0x0165	0x3E01      	ADDLW      1
0x0166	0x023E      	SUBWF      _TICK_1000+1, 0
0x0167	0x00D2      	MOVWF      R1+1
0x0168	0x0852      	MOVF       R1+1, 0
0x0169	0x3C00      	SUBLW      0
0x016A	0x1D03      	BTFSS      STATUS, 2
0x016B	0x296E      	GOTO       L__main67
0x016C	0x0851      	MOVF       R1, 0
0x016D	0x0247      	SUBWF      _LED1_tm, 0
L__main67:
0x016E	0x1803      	BTFSC      STATUS, 0
0x016F	0x2977      	GOTO       L__main27
;16F676MPPT.mpas,184 :: 		prevtime := wtmp;
0x0170	0x1283      	BCF        STATUS, 5
0x0171	0x083F      	MOVF       _wtmp, 0
0x0172	0x00B8      	MOVWF      _prevtime
0x0173	0x0840      	MOVF       _wtmp+1, 0
0x0174	0x00B9      	MOVWF      _prevtime+1
;16F676MPPT.mpas,185 :: 		LED1 := not LED1;
0x0175	0x3010      	MOVLW      16
0x0176	0x0687      	XORWF      RC4_bit, 1
;16F676MPPT.mpas,186 :: 		end;
L__main27:
;16F676MPPT.mpas,189 :: 		vol_prev2:=vol_prev1;
0x0177	0x082F      	MOVF       _vol_prev1, 0
0x0178	0x00B1      	MOVWF      _vol_prev2
0x0179	0x0830      	MOVF       _vol_prev1+1, 0
0x017A	0x00B2      	MOVWF      _vol_prev2+1
;16F676MPPT.mpas,190 :: 		vol_prev1:=adc_vol;
0x017B	0x082D      	MOVF       _adc_vol, 0
0x017C	0x00AF      	MOVWF      _vol_prev1
0x017D	0x082E      	MOVF       _adc_vol+1, 0
0x017E	0x00B0      	MOVWF      _vol_prev1+1
;16F676MPPT.mpas,192 :: 		doADCRead:=0;
0x017F	0x01BC      	CLRF       _doADCRead
;16F676MPPT.mpas,193 :: 		while doADCRead=0 do ;
L__main30:
0x0180	0x083C      	MOVF       _doADCRead, 0
0x0181	0x3A00      	XORLW      0
0x0182	0x1903      	BTFSC      STATUS, 2
0x0183	0x2980      	GOTO       L__main30
;16F676MPPT.mpas,195 :: 		volbuf[idx]:=ADC_Read(2);
0x0184	0x084A      	MOVF       _idx, 0
0x0185	0x00D0      	MOVWF      R0
0x0186	0x0DD0      	RLF        R0, 1
0x0187	0x1050      	BCF        R0, 0
0x0188	0x0850      	MOVF       R0, 0
0x0189	0x3E22      	ADDLW      _volbuf
0x018A	0x00CB      	MOVWF      FLOC__main
0x018B	0x3002      	MOVLW      2
0x018C	0x00CC      	MOVWF      FARG_ADC_Read_channel
0x018D	0x2042      	CALL       _ADC_Read
0x018E	0x084B      	MOVF       FLOC__main, 0
0x018F	0x0084      	MOVWF      FSR
0x0190	0x0850      	MOVF       R0, 0
0x0191	0x0080      	MOVWF      INDF
0x0192	0x0851      	MOVF       R0+1, 0
0x0193	0x0A84      	INCF       FSR, 1
0x0194	0x0080      	MOVWF      INDF
;16F676MPPT.mpas,196 :: 		curbuf[idx]:=ADC_Read(0);
0x0195	0x084A      	MOVF       _idx, 0
0x0196	0x00D0      	MOVWF      R0
0x0197	0x0DD0      	RLF        R0, 1
0x0198	0x1050      	BCF        R0, 0
0x0199	0x0850      	MOVF       R0, 0
0x019A	0x3E43      	ADDLW      _curbuf
0x019B	0x00CB      	MOVWF      FLOC__main
0x019C	0x01CC      	CLRF       FARG_ADC_Read_channel
0x019D	0x2042      	CALL       _ADC_Read
0x019E	0x084B      	MOVF       FLOC__main, 0
0x019F	0x0084      	MOVWF      FSR
0x01A0	0x0850      	MOVF       R0, 0
0x01A1	0x0080      	MOVWF      INDF
0x01A2	0x0851      	MOVF       R0+1, 0
0x01A3	0x0A84      	INCF       FSR, 1
0x01A4	0x0080      	MOVWF      INDF
;16F676MPPT.mpas,197 :: 		idx:=1-idx;
0x01A5	0x084A      	MOVF       _idx, 0
0x01A6	0x3C01      	SUBLW      1
0x01A7	0x00CA      	MOVWF      _idx
;16F676MPPT.mpas,198 :: 		adc_cur:=(curbuf[0]+curbuf[1]+1) div 2;
0x01A8	0x0845      	MOVF       _curbuf+2, 0
0x01A9	0x0743      	ADDWF      _curbuf, 0
0x01AA	0x00A0      	MOVWF      _adc_cur
0x01AB	0x0844      	MOVF       _curbuf+1, 0
0x01AC	0x1803      	BTFSC      STATUS, 0
0x01AD	0x3E01      	ADDLW      1
0x01AE	0x0746      	ADDWF      _curbuf+3, 0
0x01AF	0x00A1      	MOVWF      _adc_cur+1
0x01B0	0x0AA0      	INCF       _adc_cur, 1
0x01B1	0x1903      	BTFSC      STATUS, 2
0x01B2	0x0AA1      	INCF       _adc_cur+1, 1
0x01B3	0x0CA1      	RRF        _adc_cur+1, 1
0x01B4	0x0CA0      	RRF        _adc_cur, 1
0x01B5	0x13A1      	BCF        _adc_cur+1, 7
;16F676MPPT.mpas,199 :: 		adc_vol:=(volbuf[0]+volbuf[1]+1) div 2;
0x01B6	0x0824      	MOVF       _volbuf+2, 0
0x01B7	0x0722      	ADDWF      _volbuf, 0
0x01B8	0x00AD      	MOVWF      _adc_vol
0x01B9	0x0823      	MOVF       _volbuf+1, 0
0x01BA	0x1803      	BTFSC      STATUS, 0
0x01BB	0x3E01      	ADDLW      1
0x01BC	0x0725      	ADDWF      _volbuf+3, 0
0x01BD	0x00AE      	MOVWF      _adc_vol+1
0x01BE	0x0AAD      	INCF       _adc_vol, 1
0x01BF	0x1903      	BTFSC      STATUS, 2
0x01C0	0x0AAE      	INCF       _adc_vol+1, 1
0x01C1	0x0CAE      	RRF        _adc_vol+1, 1
0x01C2	0x0CAD      	RRF        _adc_vol, 1
0x01C3	0x13AE      	BCF        _adc_vol+1, 7
;16F676MPPT.mpas,200 :: 		adc_vol:=adc_vol * VOLMUL;
0x01C4	0x0DAD      	RLF        _adc_vol, 1
0x01C5	0x0DAE      	RLF        _adc_vol+1, 1
0x01C6	0x102D      	BCF        _adc_vol, 0
0x01C7	0x0DAD      	RLF        _adc_vol, 1
0x01C8	0x0DAE      	RLF        _adc_vol+1, 1
0x01C9	0x102D      	BCF        _adc_vol, 0
;16F676MPPT.mpas,203 :: 		wtmp:=TICK_1000;
0x01CA	0x083D      	MOVF       _TICK_1000, 0
0x01CB	0x00BF      	MOVWF      _wtmp
0x01CC	0x083E      	MOVF       _TICK_1000+1, 0
0x01CD	0x00C0      	MOVWF      _wtmp+1
;16F676MPPT.mpas,204 :: 		if wtmp - powertime < _UPDATE_INT then
0x01CE	0x083A      	MOVF       _powertime, 0
0x01CF	0x023D      	SUBWF      _TICK_1000, 0
0x01D0	0x00D1      	MOVWF      R1
0x01D1	0x083B      	MOVF       _powertime+1, 0
0x01D2	0x1C03      	BTFSS      STATUS, 0
0x01D3	0x3E01      	ADDLW      1
0x01D4	0x023E      	SUBWF      _TICK_1000+1, 0
0x01D5	0x00D2      	MOVWF      R1+1
0x01D6	0x3000      	MOVLW      0
0x01D7	0x0252      	SUBWF      R1+1, 0
0x01D8	0x1D03      	BTFSS      STATUS, 2
0x01D9	0x29DC      	GOTO       L__main68
0x01DA	0x302D      	MOVLW      45
0x01DB	0x0251      	SUBWF      R1, 0
L__main68:
0x01DC	0x1803      	BTFSC      STATUS, 0
0x01DD	0x29DF      	GOTO       L__main35
;16F676MPPT.mpas,205 :: 		goto CONTLOOP;
0x01DE	0x2A9B      	GOTO       L__main_CONTLOOP
L__main35:
;16F676MPPT.mpas,206 :: 		clrwdt;
0x01DF	0x0064      	CLRWDT
;16F676MPPT.mpas,207 :: 		powertime:=wtmp;
0x01E0	0x083F      	MOVF       _wtmp, 0
0x01E1	0x00BA      	MOVWF      _powertime
0x01E2	0x0840      	MOVF       _wtmp+1, 0
0x01E3	0x00BB      	MOVWF      _powertime+1
;16F676MPPT.mpas,209 :: 		power_prev:= power_curr;
0x01E4	0x0829      	MOVF       _power_curr, 0
0x01E5	0x00B4      	MOVWF      _power_prev
0x01E6	0x082A      	MOVF       _power_curr+1, 0
0x01E7	0x00B5      	MOVWF      _power_prev+1
0x01E8	0x082B      	MOVF       _power_curr+2, 0
0x01E9	0x00B6      	MOVWF      _power_prev+2
0x01EA	0x082C      	MOVF       _power_curr+3, 0
0x01EB	0x00B7      	MOVWF      _power_prev+3
;16F676MPPT.mpas,210 :: 		power_curr:= adc_vol * adc_cur;
0x01EC	0x082D      	MOVF       _adc_vol, 0
0x01ED	0x00D0      	MOVWF      R0
0x01EE	0x082E      	MOVF       _adc_vol+1, 0
0x01EF	0x00D1      	MOVWF      R0+1
0x01F0	0x01D2      	CLRF       R0+2
0x01F1	0x01D3      	CLRF       R0+3
0x01F2	0x0820      	MOVF       _adc_cur, 0
0x01F3	0x00D4      	MOVWF      R4
0x01F4	0x0821      	MOVF       _adc_cur+1, 0
0x01F5	0x00D5      	MOVWF      R4+1
0x01F6	0x01D6      	CLRF       R4+2
0x01F7	0x01D7      	CLRF       R4+3
0x01F8	0x206C      	CALL       _Mul_32x32_U
0x01F9	0x0850      	MOVF       R0, 0
0x01FA	0x00A9      	MOVWF      _power_curr
0x01FB	0x0851      	MOVF       R0+1, 0
0x01FC	0x00AA      	MOVWF      _power_curr+1
0x01FD	0x0852      	MOVF       R0+2, 0
0x01FE	0x00AB      	MOVWF      _power_curr+2
0x01FF	0x0853      	MOVF       R0+3, 0
0x0200	0x00AC      	MOVWF      _power_curr+3
;16F676MPPT.mpas,213 :: 		wtmp:=TICK_1000;
0x0201	0x083D      	MOVF       _TICK_1000, 0
0x0202	0x00BF      	MOVWF      _wtmp
0x0203	0x083E      	MOVF       _TICK_1000+1, 0
0x0204	0x00C0      	MOVWF      _wtmp+1
;16F676MPPT.mpas,214 :: 		if ON_PWM>PWM_MID then begin
0x0205	0x0849      	MOVF       _ON_PWM, 0
0x0206	0x3C7D      	SUBLW      125
0x0207	0x1803      	BTFSC      STATUS, 0
0x0208	0x2A21      	GOTO       L__main38
;16F676MPPT.mpas,215 :: 		if wtmp - voltime > _PWM_CHECK then begin
0x0209	0x0827      	MOVF       _voltime, 0
0x020A	0x023F      	SUBWF      _wtmp, 0
0x020B	0x00D1      	MOVWF      R1
0x020C	0x0828      	MOVF       _voltime+1, 0
0x020D	0x1C03      	BTFSS      STATUS, 0
0x020E	0x3E01      	ADDLW      1
0x020F	0x0240      	SUBWF      _wtmp+1, 0
0x0210	0x00D2      	MOVWF      R1+1
0x0211	0x0852      	MOVF       R1+1, 0
0x0212	0x3C08      	SUBLW      8
0x0213	0x1D03      	BTFSS      STATUS, 2
0x0214	0x2A17      	GOTO       L__main69
0x0215	0x0851      	MOVF       R1, 0
0x0216	0x3CCA      	SUBLW      202
L__main69:
0x0217	0x1803      	BTFSC      STATUS, 0
0x0218	0x2A20      	GOTO       L__main41
;16F676MPPT.mpas,216 :: 		voltime:=wtmp;
0x0219	0x083F      	MOVF       _wtmp, 0
0x021A	0x00A7      	MOVWF      _voltime
0x021B	0x0840      	MOVF       _wtmp+1, 0
0x021C	0x00A8      	MOVWF      _voltime+1
;16F676MPPT.mpas,217 :: 		adc_cur:=LM358_diff;
0x021D	0x0826      	MOVF       _LM358_diff, 0
0x021E	0x00A0      	MOVWF      _adc_cur
0x021F	0x01A1      	CLRF       _adc_cur+1
;16F676MPPT.mpas,218 :: 		end;
L__main41:
;16F676MPPT.mpas,219 :: 		end else
0x0220	0x2A25      	GOTO       L__main39
L__main38:
;16F676MPPT.mpas,220 :: 		voltime:=wtmp;
0x0221	0x083F      	MOVF       _wtmp, 0
0x0222	0x00A7      	MOVWF      _voltime
0x0223	0x0840      	MOVF       _wtmp+1, 0
0x0224	0x00A8      	MOVWF      _voltime+1
L__main39:
;16F676MPPT.mpas,222 :: 		if adc_cur>LM358_diff then begin
0x0225	0x0821      	MOVF       _adc_cur+1, 0
0x0226	0x3C00      	SUBLW      0
0x0227	0x1D03      	BTFSS      STATUS, 2
0x0228	0x2A2B      	GOTO       L__main70
0x0229	0x0820      	MOVF       _adc_cur, 0
0x022A	0x0226      	SUBWF      _LM358_diff, 0
L__main70:
0x022B	0x1803      	BTFSC      STATUS, 0
0x022C	0x2A78      	GOTO       L__main44
;16F676MPPT.mpas,224 :: 		if power_curr = power_prev then begin
0x022D	0x082C      	MOVF       _power_curr+3, 0
0x022E	0x0637      	XORWF      _power_prev+3, 0
0x022F	0x1D03      	BTFSS      STATUS, 2
0x0230	0x2A3B      	GOTO       L__main71
0x0231	0x082B      	MOVF       _power_curr+2, 0
0x0232	0x0636      	XORWF      _power_prev+2, 0
0x0233	0x1D03      	BTFSS      STATUS, 2
0x0234	0x2A3B      	GOTO       L__main71
0x0235	0x082A      	MOVF       _power_curr+1, 0
0x0236	0x0635      	XORWF      _power_prev+1, 0
0x0237	0x1D03      	BTFSS      STATUS, 2
0x0238	0x2A3B      	GOTO       L__main71
0x0239	0x0829      	MOVF       _power_curr, 0
0x023A	0x0634      	XORWF      _power_prev, 0
L__main71:
0x023B	0x1D03      	BTFSS      STATUS, 2
0x023C	0x2A40      	GOTO       L__main47
;16F676MPPT.mpas,225 :: 		LED1_tm:=250;
0x023D	0x30FA      	MOVLW      250
0x023E	0x00C7      	MOVWF      _LED1_tm
;16F676MPPT.mpas,226 :: 		goto CONTLOOP;
0x023F	0x2A9B      	GOTO       L__main_CONTLOOP
;16F676MPPT.mpas,227 :: 		end else if power_curr > power_prev then begin
L__main47:
0x0240	0x082C      	MOVF       _power_curr+3, 0
0x0241	0x0237      	SUBWF      _power_prev+3, 0
0x0242	0x1D03      	BTFSS      STATUS, 2
0x0243	0x2A4E      	GOTO       L__main72
0x0244	0x082B      	MOVF       _power_curr+2, 0
0x0245	0x0236      	SUBWF      _power_prev+2, 0
0x0246	0x1D03      	BTFSS      STATUS, 2
0x0247	0x2A4E      	GOTO       L__main72
0x0248	0x082A      	MOVF       _power_curr+1, 0
0x0249	0x0235      	SUBWF      _power_prev+1, 0
0x024A	0x1D03      	BTFSS      STATUS, 2
0x024B	0x2A4E      	GOTO       L__main72
0x024C	0x0829      	MOVF       _power_curr, 0
0x024D	0x0234      	SUBWF      _power_prev, 0
L__main72:
0x024E	0x1803      	BTFSC      STATUS, 0
0x024F	0x2A53      	GOTO       L__main50
;16F676MPPT.mpas,228 :: 		LED1_tm:=200;
0x0250	0x30C8      	MOVLW      200
0x0251	0x00C7      	MOVWF      _LED1_tm
;16F676MPPT.mpas,229 :: 		end else begin
0x0252	0x2A56      	GOTO       L__main51
L__main50:
;16F676MPPT.mpas,230 :: 		LED1_tm:=150;
0x0253	0x3096      	MOVLW      150
0x0254	0x00C7      	MOVWF      _LED1_tm
;16F676MPPT.mpas,231 :: 		flag_inc:=not flag_inc;
0x0255	0x09B3      	COMF       _flag_inc, 1
;16F676MPPT.mpas,232 :: 		end;
L__main51:
;16F676MPPT.mpas,233 :: 		if (adc_vol+vol_prev2+1) div 2 < vol_prev1 then begin
0x0256	0x0831      	MOVF       _vol_prev2, 0
0x0257	0x072D      	ADDWF      _adc_vol, 0
0x0258	0x00D0      	MOVWF      R0
0x0259	0x082E      	MOVF       _adc_vol+1, 0
0x025A	0x1803      	BTFSC      STATUS, 0
0x025B	0x3E01      	ADDLW      1
0x025C	0x0732      	ADDWF      _vol_prev2+1, 0
0x025D	0x00D1      	MOVWF      R0+1
0x025E	0x0850      	MOVF       R0, 0
0x025F	0x3E01      	ADDLW      1
0x0260	0x00D3      	MOVWF      R3
0x0261	0x3000      	MOVLW      0
0x0262	0x1803      	BTFSC      STATUS, 0
0x0263	0x3E01      	ADDLW      1
0x0264	0x0751      	ADDWF      R0+1, 0
0x0265	0x00D4      	MOVWF      R3+1
0x0266	0x0853      	MOVF       R3, 0
0x0267	0x00D1      	MOVWF      R1
0x0268	0x0854      	MOVF       R3+1, 0
0x0269	0x00D2      	MOVWF      R1+1
0x026A	0x0CD2      	RRF        R1+1, 1
0x026B	0x0CD1      	RRF        R1, 1
0x026C	0x13D2      	BCF        R1+1, 7
0x026D	0x0830      	MOVF       _vol_prev1+1, 0
0x026E	0x0252      	SUBWF      R1+1, 0
0x026F	0x1D03      	BTFSS      STATUS, 2
0x0270	0x2A73      	GOTO       L__main73
0x0271	0x082F      	MOVF       _vol_prev1, 0
0x0272	0x0251      	SUBWF      R1, 0
L__main73:
0x0273	0x1803      	BTFSC      STATUS, 0
0x0274	0x2A77      	GOTO       L__main53
;16F676MPPT.mpas,234 :: 		flag_inc:=true;
0x0275	0x30FF      	MOVLW      255
0x0276	0x00B3      	MOVWF      _flag_inc
;16F676MPPT.mpas,235 :: 		end;
L__main53:
;16F676MPPT.mpas,236 :: 		end else begin
0x0277	0x2A84      	GOTO       L__main45
L__main44:
;16F676MPPT.mpas,237 :: 		LED1_tm:=100;
0x0278	0x3064      	MOVLW      100
0x0279	0x00C7      	MOVWF      _LED1_tm
;16F676MPPT.mpas,238 :: 		VOLPWM:=PWM_MID;
0x027A	0x307D      	MOVLW      125
0x027B	0x00C8      	MOVWF      _VOLPWM
;16F676MPPT.mpas,239 :: 		flag_inc:=false;
0x027C	0x01B3      	CLRF       _flag_inc
;16F676MPPT.mpas,240 :: 		power_curr:=0;
0x027D	0x01A9      	CLRF       _power_curr
0x027E	0x01AA      	CLRF       _power_curr+1
0x027F	0x01AB      	CLRF       _power_curr+2
0x0280	0x01AC      	CLRF       _power_curr+3
;16F676MPPT.mpas,241 :: 		adc_cur:=0;
0x0281	0x01A0      	CLRF       _adc_cur
0x0282	0x01A1      	CLRF       _adc_cur+1
;16F676MPPT.mpas,242 :: 		goto CONTLOOP;
0x0283	0x2A9B      	GOTO       L__main_CONTLOOP
;16F676MPPT.mpas,243 :: 		end;
L__main45:
;16F676MPPT.mpas,246 :: 		if flag_inc then begin
0x0284	0x0833      	MOVF       _flag_inc, 0
0x0285	0x1903      	BTFSC      STATUS, 2
0x0286	0x2A91      	GOTO       L__main56
;16F676MPPT.mpas,247 :: 		if VOLPWM<PWM_MAX then
0x0287	0x30FA      	MOVLW      250
0x0288	0x0248      	SUBWF      _VOLPWM, 0
0x0289	0x1803      	BTFSC      STATUS, 0
0x028A	0x2A8D      	GOTO       L__main59
;16F676MPPT.mpas,248 :: 		Inc(VOLPWM)
0x028B	0x0AC8      	INCF       _VOLPWM, 1
0x028C	0x2A90      	GOTO       L__main60
;16F676MPPT.mpas,249 :: 		else begin
L__main59:
;16F676MPPT.mpas,250 :: 		VOLPWM:=PWM_MAX;
0x028D	0x30FA      	MOVLW      250
0x028E	0x00C8      	MOVWF      _VOLPWM
;16F676MPPT.mpas,251 :: 		flag_inc:=false;
0x028F	0x01B3      	CLRF       _flag_inc
;16F676MPPT.mpas,252 :: 		end;
L__main60:
;16F676MPPT.mpas,253 :: 		end else begin
0x0290	0x2A9B      	GOTO       L__main57
L__main56:
;16F676MPPT.mpas,254 :: 		if VOLPWM>PWM_MIN then
0x0291	0x0848      	MOVF       _VOLPWM, 0
0x0292	0x3C01      	SUBLW      1
0x0293	0x1803      	BTFSC      STATUS, 0
0x0294	0x2A97      	GOTO       L__main62
;16F676MPPT.mpas,255 :: 		Dec(VOLPWM)
0x0295	0x03C8      	DECF       _VOLPWM, 1
0x0296	0x2A9B      	GOTO       L__main63
;16F676MPPT.mpas,256 :: 		else begin
L__main62:
;16F676MPPT.mpas,257 :: 		VOLPWM:=PWM_MIN;
0x0297	0x3001      	MOVLW      1
0x0298	0x00C8      	MOVWF      _VOLPWM
;16F676MPPT.mpas,258 :: 		flag_inc:=true;
0x0299	0x30FF      	MOVLW      255
0x029A	0x00B3      	MOVWF      _flag_inc
;16F676MPPT.mpas,259 :: 		end;
L__main63:
;16F676MPPT.mpas,260 :: 		end;
L__main57:
;16F676MPPT.mpas,261 :: 		CONTLOOP:
L__main_CONTLOOP:
;16F676MPPT.mpas,263 :: 		end;
0x029B	0x295C      	GOTO       L__main22
;16F676MPPT.mpas,264 :: 		end.
L_end_main:
0x029C	0x2A9C      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [44]    _Interrupt
0x0030       [6]    _Delay_22us
0x0036      [12]    _Delay_100ms
0x0042      [42]    _ADC_Read
0x006C      [55]    _Mul_32x32_U
0x00A3      [26]    _EEPROM_Write
0x00BD      [11]    _EEPROM_Read
0x00C8     [469]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0001       [1]    TMR0
0x0003       [1]    STATUS
0x0007       [0]    Write_OPAMP
0x0007       [0]    RC4_bit
0x0007       [0]    RC3_bit
0x0007       [0]    LED1
0x0007       [0]    PWM_SIG
0x0007       [0]    RC1_bit
0x000B       [0]    T0IF_bit
0x000B       [1]    INTCON
0x000B       [0]    TMR0IE_bit
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000C       [0]    T1IF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1CS_bit
0x0019       [1]    CMCON
0x001E       [1]    ADRESH
0x001F       [0]    CHS1_bit
0x001F       [1]    ADCON0
0x001F       [0]    ADFM_bit
0x001F       [0]    VCFG_bit
0x0020       [2]    _adc_cur
0x0022       [4]    _volbuf
0x0026       [1]    _LM358_diff
0x0027       [2]    _voltime
0x0029       [4]    _power_curr
0x002D       [2]    _adc_vol
0x002F       [2]    _vol_prev1
0x0031       [2]    _vol_prev2
0x0033       [1]    _flag_inc
0x0034       [4]    _power_prev
0x0038       [2]    _prevtime
0x003A       [2]    _powertime
0x003C       [1]    _doADCRead
0x003D       [2]    _TICK_1000
0x003F       [2]    _wtmp
0x0041       [1]    ___savePCLATH
0x0042       [1]    ___saveSTATUS
0x0043       [4]    _curbuf
0x0047       [1]    _LED1_tm
0x0048       [1]    _VOLPWM
0x0049       [1]    _ON_PWM
0x004A       [1]    _idx
0x004B       [1]    FLOC__main
0x004C       [1]    FARG_EEPROM_Read_address
0x004C       [1]    FARG_EEPROM_Write_address
0x004C       [1]    FARG_ADC_Read_channel
0x004D       [1]    FARG_EEPROM_Write_data_
0x004D       [2]    ADC_Read_local_result
0x0050       [1]    R0
0x0051       [1]    R1
0x0052       [1]    R2
0x0053       [1]    R3
0x0054       [1]    R4
0x0055       [1]    R5
0x0056       [1]    R6
0x0057       [1]    R7
0x0058       [1]    R8
0x0059       [1]    R9
0x005A       [1]    R10
0x005B       [1]    R11
0x005C       [1]    R12
0x005D       [1]    R13
0x005E       [1]    R14
0x005F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA0_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC4_bit
0x008C       [0]    TMR1IE_bit
0x0091       [1]    ANSEL
0x009A       [1]    EEDATA
0x009B       [1]    EEADR
0x009C       [1]    EECON1
0x009D       [1]    EECON2
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
