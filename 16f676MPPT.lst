;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2018-11-03 ¿ÀÀü 11:16:53
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28E6      	GOTO       230
_Interrupt:
0x0004	0x00DF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00C1      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00C2      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;16F676MPPT.mpas,66 :: 		begin
;16F676MPPT.mpas,67 :: 		if T0IF_bit=1 then begin
0x000B	0x1D0B      	BTFSS      T0IF_bit, BitPos(T0IF_bit+0)
0x000C	0x281E      	GOTO       L__Interrupt2
;16F676MPPT.mpas,68 :: 		if PWM_FLAG=1 then begin
0x000D	0x1C3B      	BTFSS      _PWM_FLAG, BitPos(_PWM_FLAG+0)
0x000E	0x2818      	GOTO       L__Interrupt5
;16F676MPPT.mpas,69 :: 		ON_PWM:=VOL_PWM;
0x000F	0x1283      	BCF        STATUS, 5
0x0010	0x083F      	MOVF       _VOL_PWM, 0
0x0011	0x00C0      	MOVWF      _ON_PWM
;16F676MPPT.mpas,71 :: 		TMR0:=255-ON_PWM;
0x0012	0x083F      	MOVF       _VOL_PWM, 0
0x0013	0x3CFF      	SUBLW      255
0x0014	0x0081      	MOVWF      TMR0
;16F676MPPT.mpas,72 :: 		PWM_SIG:=0;
0x0015	0x1087      	BCF        RC1_bit, BitPos(RC1_bit+0)
;16F676MPPT.mpas,73 :: 		PWM_FLAG:=0;
0x0016	0x103B      	BCF        _PWM_FLAG, BitPos(_PWM_FLAG+0)
;16F676MPPT.mpas,74 :: 		end else begin
0x0017	0x281D      	GOTO       L__Interrupt6
L__Interrupt5:
0x0018	0x1283      	BCF        STATUS, 5
;16F676MPPT.mpas,76 :: 		TMR0:=255-PWM_MAX+ON_PWM;
0x0019	0x0840      	MOVF       _ON_PWM, 0
0x001A	0x0081      	MOVWF      TMR0
;16F676MPPT.mpas,77 :: 		PWM_SIG:=1;
0x001B	0x1487      	BSF        RC1_bit, BitPos(RC1_bit+0)
;16F676MPPT.mpas,78 :: 		PWM_FLAG:=1;
0x001C	0x143B      	BSF        _PWM_FLAG, BitPos(_PWM_FLAG+0)
;16F676MPPT.mpas,79 :: 		end;
L__Interrupt6:
;16F676MPPT.mpas,80 :: 		T0IF_bit:=0;
0x001D	0x110B      	BCF        T0IF_bit, BitPos(T0IF_bit+0)
;16F676MPPT.mpas,81 :: 		end;
L__Interrupt2:
;16F676MPPT.mpas,82 :: 		end;
L_end_Interrupt:
L__Interrupt94:
0x001E	0x0842      	MOVF       ___savePCLATH, 0
0x001F	0x008A      	MOVWF      PCLATH
0x0020	0x0E41      	SWAPF      ___saveSTATUS, 0
0x0021	0x0083      	MOVWF      STATUS
0x0022	0x0EDF      	SWAPF      R15, 1
0x0023	0x0E5F      	SWAPF      R15, 0
0x0024	0x0009      	RETFIE
; end of _Interrupt
_Delay_22us:
;__Lib_Delays.mpas,39 :: 		begin
;__Lib_Delays.mpas,40 :: 		Delay_us(22);
0x0025	0x3007      	MOVLW      7
0x0026	0x1283      	BCF        STATUS, 5
0x0027	0x00DD      	MOVWF      R13
L__Delay_22us5:
0x0028	0x0BDD      	DECFSZ     R13, 1
0x0029	0x2828      	GOTO       L__Delay_22us5
;__Lib_Delays.mpas,41 :: 		end;
L_end_Delay_22us:
0x002A	0x0008      	RETURN
; end of _Delay_22us
_Delay_10ms:
;__Lib_Delays.mpas,84 :: 		begin
;__Lib_Delays.mpas,85 :: 		Delay_ms(10);
0x002B	0x300D      	MOVLW      13
0x002C	0x1283      	BCF        STATUS, 5
0x002D	0x00DC      	MOVWF      R12
0x002E	0x30FB      	MOVLW      251
0x002F	0x00DD      	MOVWF      R13
L__Delay_10ms23:
0x0030	0x0BDD      	DECFSZ     R13, 1
0x0031	0x2830      	GOTO       L__Delay_10ms23
0x0032	0x0BDC      	DECFSZ     R12, 1
0x0033	0x2830      	GOTO       L__Delay_10ms23
0x0034	0x0000      	NOP
0x0035	0x0000      	NOP
;__Lib_Delays.mpas,86 :: 		end;
L_end_Delay_10ms:
0x0036	0x0008      	RETURN
; end of _Delay_10ms
_Delay_100ms:
;__Lib_Delays.mpas,79 :: 		begin
;__Lib_Delays.mpas,80 :: 		Delay_ms(100);
0x0037	0x3082      	MOVLW      130
0x0038	0x1283      	BCF        STATUS, 5
0x0039	0x00DC      	MOVWF      R12
0x003A	0x30DD      	MOVLW      221
0x003B	0x00DD      	MOVWF      R13
L__Delay_100ms21:
0x003C	0x0BDD      	DECFSZ     R13, 1
0x003D	0x283C      	GOTO       L__Delay_100ms21
0x003E	0x0BDC      	DECFSZ     R12, 1
0x003F	0x283C      	GOTO       L__Delay_100ms21
0x0040	0x0000      	NOP
0x0041	0x0000      	NOP
;__Lib_Delays.mpas,81 :: 		end;
L_end_Delay_100ms:
0x0042	0x0008      	RETURN
; end of _Delay_100ms
_ADC_Read:
;__Lib_ADC_A_B.mpas,59 :: 		
;__Lib_ADC_A_B.mpas,61 :: 		
0x0043	0x30C3      	MOVLW      195
0x0044	0x1283      	BCF        STATUS, 5
0x0045	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_B.mpas,66 :: 		
0x0046	0x3040      	MOVLW      64
0x0047	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_B.mpas,67 :: 		
0x0048	0x30F0      	MOVLW      240
0x0049	0x1683      	BSF        STATUS, 5
0x004A	0x049F      	IORWF      ADCON1, 1
;__Lib_ADC_A_B.mpas,68 :: 		
0x004B	0x1283      	BCF        STATUS, 5
0x004C	0x179F      	BSF        ADCON0, 7
;__Lib_ADC_A_B.mpas,69 :: 		
0x004D	0x0846      	MOVF       FARG_ADC_Read_channel, 0
0x004E	0x00D0      	MOVWF      R0
0x004F	0x0DD0      	RLF        R0, 1
0x0050	0x1050      	BCF        R0, 0
0x0051	0x0DD0      	RLF        R0, 1
0x0052	0x1050      	BCF        R0, 0
0x0053	0x0850      	MOVF       R0, 0
0x0054	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_B.mpas,72 :: 		
0x0055	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_B.mpas,75 :: 		
0x0056	0x2025      	CALL       _Delay_22us
;__Lib_ADC_A_B.mpas,78 :: 		
0x0057	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_A_B.mpas,81 :: 		
L__ADC_Read9:
0x0058	0x1C9F      	BTFSS      ADCON0, 1
0x0059	0x285C      	GOTO       L__ADC_Read10
0x005A	0x0000      	NOP
0x005B	0x2858      	GOTO       L__ADC_Read9
L__ADC_Read10:
;__Lib_ADC_A_B.mpas,84 :: 		
0x005C	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_B.mpas,87 :: 		
0x005D	0x081E      	MOVF       ADRESH, 0
0x005E	0x00D1      	MOVWF      R0+1
0x005F	0x01D0      	CLRF       R0
0x0060	0x1683      	BSF        STATUS, 5
0x0061	0x081E      	MOVF       ADRESL, 0
0x0062	0x0450      	IORWF      R0, 0
0x0063	0x00C7      	MOVWF      ADC_Read_local_result
0x0064	0x0851      	MOVF       R0+1, 0
0x0065	0x00C8      	MOVWF      ADC_Read_local_result+1
0x0066	0x3000      	MOVLW      0
0x0067	0x04C8      	IORWF      ADC_Read_local_result+1, 1
;__Lib_ADC_A_B.mpas,89 :: 		
0x0068	0x0847      	MOVF       ADC_Read_local_result, 0
0x0069	0x00D0      	MOVWF      R0
0x006A	0x0848      	MOVF       ADC_Read_local_result+1, 0
0x006B	0x00D1      	MOVWF      R0+1
L_end_ADC_Read:
0x006C	0x0008      	RETURN
; end of _ADC_Read
_Div_16x16_U:
;__Lib_Math.mpas,207 :: 		
;__Lib_Math.mpas,213 :: 		
0x006D	0x1283      	BCF        STATUS, 5
;__Lib_Math.mpas,214 :: 		
0x006E	0x1303      	BCF        STATUS, 6
;__Lib_Math.mpas,215 :: 		
0x006F	0x01D8      	CLRF       R8
;__Lib_Math.mpas,216 :: 		
0x0070	0x01D9      	CLRF       R9
;__Lib_Math.mpas,217 :: 		
0x0071	0x3010      	MOVLW      16
;__Lib_Math.mpas,218 :: 		
0x0072	0x00DC      	MOVWF      R12
;__Lib_Math.mpas,219 :: 		
0x0073	0x0D51      	RLF        R1, 0
;__Lib_Math.mpas,220 :: 		
0x0074	0x0DD8      	RLF        R8, 1
;__Lib_Math.mpas,221 :: 		
0x0075	0x0DD9      	RLF        R9, 1
;__Lib_Math.mpas,222 :: 		
0x0076	0x0854      	MOVF       R4, 0
;__Lib_Math.mpas,223 :: 		
0x0077	0x02D8      	SUBWF      R8, 1
;__Lib_Math.mpas,224 :: 		
0x0078	0x0855      	MOVF       R5, 0
;__Lib_Math.mpas,225 :: 		
0x0079	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.mpas,226 :: 		
0x007A	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.mpas,227 :: 		
0x007B	0x02D9      	SUBWF      R9, 1
;__Lib_Math.mpas,228 :: 		
0x007C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,229 :: 		
0x007D	0x2885      	GOTO       $+8
;__Lib_Math.mpas,230 :: 		
0x007E	0x0854      	MOVF       R4, 0
;__Lib_Math.mpas,231 :: 		
0x007F	0x07D8      	ADDWF      R8, 1
;__Lib_Math.mpas,232 :: 		
0x0080	0x0855      	MOVF       R5, 0
;__Lib_Math.mpas,233 :: 		
0x0081	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,234 :: 		
0x0082	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.mpas,235 :: 		
0x0083	0x07D9      	ADDWF      R9, 1
;__Lib_Math.mpas,236 :: 		
0x0084	0x1003      	BCF        STATUS, 0
;__Lib_Math.mpas,237 :: 		
0x0085	0x0DD0      	RLF        R0, 1
;__Lib_Math.mpas,238 :: 		
0x0086	0x0DD1      	RLF        R1, 1
;__Lib_Math.mpas,239 :: 		
0x0087	0x0BDC      	DECFSZ     R12, 1
;__Lib_Math.mpas,240 :: 		
0x0088	0x2873      	GOTO       $-21
;__Lib_Math.mpas,242 :: 		
L_end_Div_16x16_U:
0x0089	0x0008      	RETURN
; end of _Div_16x16_U
_EEPROM_Write:
;__Lib_EEPROM.mpas,27 :: 		
;__Lib_EEPROM.mpas,28 :: 		
L__EEPROM_Write3:
0x008A	0x1683      	BSF        STATUS, 5
0x008B	0x1C9C      	BTFSS      EECON1, 1
0x008C	0x288F      	GOTO       L__EEPROM_Write4
0x008D	0x0000      	NOP
0x008E	0x288A      	GOTO       L__EEPROM_Write3
L__EEPROM_Write4:
;__Lib_EEPROM.mpas,30 :: 		
0x008F	0x0846      	MOVF       FARG_EEPROM_Write_address, 0
0x0090	0x009B      	MOVWF      EEADR
;__Lib_EEPROM.mpas,31 :: 		
0x0091	0x0847      	MOVF       FARG_EEPROM_Write_data_, 0
0x0092	0x009A      	MOVWF      EEDATA
;__Lib_EEPROM.mpas,32 :: 		
0x0093	0x139C      	BCF        EECON1, 7
;__Lib_EEPROM.mpas,33 :: 		
0x0094	0x151C      	BSF        EECON1, 2
;__Lib_EEPROM.mpas,35 :: 		
0x0095	0x080B      	MOVF       INTCON, 0
0x0096	0x00D0      	MOVWF      R0
;__Lib_EEPROM.mpas,38 :: 		
0x0097	0x138B      	BCF        INTCON, 7
;__Lib_EEPROM.mpas,39 :: 		
0x0098	0x3055      	MOVLW      85
0x0099	0x009D      	MOVWF      EECON2
;__Lib_EEPROM.mpas,40 :: 		
0x009A	0x30AA      	MOVLW      170
0x009B	0x009D      	MOVWF      EECON2
;__Lib_EEPROM.mpas,41 :: 		
0x009C	0x149C      	BSF        EECON1, 1
;__Lib_EEPROM.mpas,45 :: 		
0x009D	0x1BD0      	BTFSC      R0, 7
0x009E	0x28A1      	GOTO       L__EEPROM_Write9
0x009F	0x138B      	BCF        INTCON, 7
0x00A0	0x28A2      	GOTO       L__EEPROM_Write10
L__EEPROM_Write9:
0x00A1	0x178B      	BSF        INTCON, 7
L__EEPROM_Write10:
;__Lib_EEPROM.mpas,46 :: 		
0x00A2	0x111C      	BCF        EECON1, 2
;__Lib_EEPROM.mpas,47 :: 		
L_end_EEPROM_Write:
0x00A3	0x0008      	RETURN
; end of _EEPROM_Write
_EEPROM_Read:
;__Lib_EEPROM.mpas,13 :: 		
;__Lib_EEPROM.mpas,14 :: 		
0x00A4	0x1283      	BCF        STATUS, 5
0x00A5	0x0846      	MOVF       FARG_EEPROM_Read_address, 0
0x00A6	0x1683      	BSF        STATUS, 5
0x00A7	0x009B      	MOVWF      EEADR
;__Lib_EEPROM.mpas,15 :: 		
0x00A8	0x139C      	BCF        EECON1, 7
;__Lib_EEPROM.mpas,21 :: 		
0x00A9	0x141C      	BSF        EECON1, 0
;__Lib_EEPROM.mpas,22 :: 		
0x00AA	0x081A      	MOVF       EEDATA, 0
0x00AB	0x00D1      	MOVWF      R1
;__Lib_EEPROM.mpas,23 :: 		
0x00AC	0x0851      	MOVF       R1, 0
0x00AD	0x00D0      	MOVWF      R0
L_end_EEPROM_Read:
0x00AE	0x0008      	RETURN
; end of _EEPROM_Read
_Mul_32x32_U:
;__Lib_Math.mpas,1774 :: 		
;__Lib_Math.mpas,1788 :: 		
0x00AF	0x1283      	BCF        STATUS, 5
;__Lib_Math.mpas,1789 :: 		
0x00B0	0x1303      	BCF        STATUS, 6
;__Lib_Math.mpas,1790 :: 		
0x00B1	0x3022      	MOVLW      34
;__Lib_Math.mpas,1791 :: 		
0x00B2	0x00DC      	MOVWF      R12
;__Lib_Math.mpas,1792 :: 		
0x00B3	0x01D8      	CLRF       R8
;__Lib_Math.mpas,1793 :: 		
0x00B4	0x01D9      	CLRF       R9
;__Lib_Math.mpas,1794 :: 		
0x00B5	0x01DA      	CLRF       R10
;__Lib_Math.mpas,1795 :: 		
0x00B6	0x01DB      	CLRF       R11
;__Lib_Math.mpas,1797 :: 		
_NEXT:
;__Lib_Math.mpas,1801 :: 		
0x00B7	0x03DC      	DECF       R12, 1
;__Lib_Math.mpas,1802 :: 		
0x00B8	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.mpas,1803 :: 		
0x00B9	0x28E5      	GOTO       _EXIT2
;__Lib_Math.mpas,1804 :: 		
0x00BA	0x1003      	BCF        STATUS, 0
;__Lib_Math.mpas,1806 :: 		
_LOOP:
;__Lib_Math.mpas,1815 :: 		
0x00BB	0x0CDB      	RRF        R11, 1
;__Lib_Math.mpas,1816 :: 		
0x00BC	0x0CDA      	RRF        R10, 1
;__Lib_Math.mpas,1817 :: 		
0x00BD	0x0CD9      	RRF        R9, 1
;__Lib_Math.mpas,1818 :: 		
0x00BE	0x0CD8      	RRF        R8, 1
;__Lib_Math.mpas,1819 :: 		
0x00BF	0x0CD3      	RRF        R3, 1
;__Lib_Math.mpas,1820 :: 		
0x00C0	0x0CD2      	RRF        R2, 1
;__Lib_Math.mpas,1821 :: 		
0x00C1	0x0CD1      	RRF        R1, 1
;__Lib_Math.mpas,1822 :: 		
0x00C2	0x0CD0      	RRF        R0, 1
;__Lib_Math.mpas,1827 :: 		
0x00C3	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.mpas,1828 :: 		
0x00C4	0x28B7      	GOTO       _NEXT
;__Lib_Math.mpas,1829 :: 		
0x00C5	0x03DC      	DECF       R12, 1
;__Lib_Math.mpas,1830 :: 		
0x00C6	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.mpas,1831 :: 		
0x00C7	0x28D7      	GOTO       _EXIT1
;__Lib_Math.mpas,1838 :: 		
0x00C8	0x0854      	MOVF       R4, 0
;__Lib_Math.mpas,1839 :: 		
0x00C9	0x07D8      	ADDWF      R8, 1
;__Lib_Math.mpas,1840 :: 		
0x00CA	0x0855      	MOVF       R5, 0
;__Lib_Math.mpas,1841 :: 		
0x00CB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1842 :: 		
0x00CC	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.mpas,1843 :: 		
0x00CD	0x07D9      	ADDWF      R9, 1
;__Lib_Math.mpas,1844 :: 		
0x00CE	0x0856      	MOVF       R6, 0
;__Lib_Math.mpas,1845 :: 		
0x00CF	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1846 :: 		
0x00D0	0x0F56      	INCFSZ     R6, 0
;__Lib_Math.mpas,1847 :: 		
0x00D1	0x07DA      	ADDWF      R10, 1
;__Lib_Math.mpas,1848 :: 		
0x00D2	0x0857      	MOVF       R7, 0
;__Lib_Math.mpas,1849 :: 		
0x00D3	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1850 :: 		
0x00D4	0x0F57      	INCFSZ     R7, 0
;__Lib_Math.mpas,1851 :: 		
0x00D5	0x07DB      	ADDWF      R11, 1
;__Lib_Math.mpas,1853 :: 		
0x00D6	0x28BB      	GOTO       _LOOP
;__Lib_Math.mpas,1855 :: 		
_EXIT1:
;__Lib_Math.mpas,1860 :: 		
0x00D7	0x0854      	MOVF       R4, 0
;__Lib_Math.mpas,1861 :: 		
0x00D8	0x07D8      	ADDWF      R8, 1
;__Lib_Math.mpas,1862 :: 		
0x00D9	0x0855      	MOVF       R5, 0
;__Lib_Math.mpas,1863 :: 		
0x00DA	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1864 :: 		
0x00DB	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.mpas,1865 :: 		
0x00DC	0x07D9      	ADDWF      R9, 1
;__Lib_Math.mpas,1866 :: 		
0x00DD	0x0856      	MOVF       R6, 0
;__Lib_Math.mpas,1867 :: 		
0x00DE	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1868 :: 		
0x00DF	0x0F56      	INCFSZ     R6, 0
;__Lib_Math.mpas,1869 :: 		
0x00E0	0x07DA      	ADDWF      R10, 1
;__Lib_Math.mpas,1870 :: 		
0x00E1	0x0857      	MOVF       R7, 0
;__Lib_Math.mpas,1871 :: 		
0x00E2	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,1872 :: 		
0x00E3	0x0F57      	INCFSZ     R7, 0
;__Lib_Math.mpas,1873 :: 		
0x00E4	0x07DB      	ADDWF      R11, 1
;__Lib_Math.mpas,1876 :: 		
_EXIT2:
;__Lib_Math.mpas,1878 :: 		
L_end_Mul_32x32_U:
0x00E5	0x0008      	RETURN
; end of _Mul_32x32_U
_main:
;16F676MPPT.mpas,84 :: 		begin
;16F676MPPT.mpas,85 :: 		CMCON:=7;
0x00E6	0x3007      	MOVLW      7
0x00E7	0x1283      	BCF        STATUS, 5
0x00E8	0x0099      	MOVWF      CMCON
;16F676MPPT.mpas,86 :: 		ANSEL:=%00000101;       // ADC conversion clock = fRC, RA0=Current, RA2=Voltage
0x00E9	0x3005      	MOVLW      5
0x00EA	0x1683      	BSF        STATUS, 5
0x00EB	0x0091      	MOVWF      ANSEL
;16F676MPPT.mpas,87 :: 		TRISA0_bit:=1;
0x00EC	0x1405      	BSF        TRISA0_bit, BitPos(TRISA0_bit+0)
;16F676MPPT.mpas,88 :: 		TRISA1_bit:=1;          // Vref
0x00ED	0x1485      	BSF        TRISA1_bit, BitPos(TRISA1_bit+0)
;16F676MPPT.mpas,89 :: 		TRISA2_bit:=1;
0x00EE	0x1505      	BSF        TRISA2_bit, BitPos(TRISA2_bit+0)
;16F676MPPT.mpas,90 :: 		VCFG_bit:=1;
0x00EF	0x1283      	BCF        STATUS, 5
0x00F0	0x171F      	BSF        VCFG_bit, BitPos(VCFG_bit+0)
;16F676MPPT.mpas,91 :: 		CHS1_bit:=1;
0x00F1	0x159F      	BSF        CHS1_bit, BitPos(CHS1_bit+0)
;16F676MPPT.mpas,92 :: 		ADFM_bit:=1;
0x00F2	0x179F      	BSF        ADFM_bit, BitPos(ADFM_bit+0)
;16F676MPPT.mpas,94 :: 		TRISC1_bit:=0;          // PWM
0x00F3	0x1683      	BSF        STATUS, 5
0x00F4	0x1087      	BCF        TRISC1_bit, BitPos(TRISC1_bit+0)
;16F676MPPT.mpas,95 :: 		TRISC4_bit:=0;          // LED
0x00F5	0x1207      	BCF        TRISC4_bit, BitPos(TRISC4_bit+0)
;16F676MPPT.mpas,96 :: 		TRISC3_bit:=1;          // OP-AMP Cal
0x00F6	0x1587      	BSF        TRISC3_bit, BitPos(TRISC3_bit+0)
;16F676MPPT.mpas,98 :: 		LED1:=0;
0x00F7	0x1283      	BCF        STATUS, 5
0x00F8	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
;16F676MPPT.mpas,99 :: 		PWM_SIG:=1;
0x00F9	0x1487      	BSF        RC1_bit, BitPos(RC1_bit+0)
;16F676MPPT.mpas,100 :: 		PWM_FLAG:=1;
0x00FA	0x143B      	BSF        _PWM_FLAG, BitPos(_PWM_FLAG+0)
;16F676MPPT.mpas,101 :: 		LED1_tm:=250;
0x00FB	0x30FA      	MOVLW      250
0x00FC	0x00BD      	MOVWF      _LED1_tm
;16F676MPPT.mpas,102 :: 		ON_PWM:=0;
0x00FD	0x01C0      	CLRF       _ON_PWM
;16F676MPPT.mpas,103 :: 		VOL_PWM:=0;
0x00FE	0x01BF      	CLRF       _VOL_PWM
;16F676MPPT.mpas,104 :: 		TICK_1000:=0;
0x00FF	0x01BE      	CLRF       _TICK_1000
;16F676MPPT.mpas,106 :: 		OPTION_REG:=%11011111;        // ~4KHz @ 4MHz, 1000000 / 4 = 3.9k
0x0100	0x30DF      	MOVLW      223
0x0101	0x1683      	BSF        STATUS, 5
0x0102	0x0081      	MOVWF      OPTION_REG
;16F676MPPT.mpas,107 :: 		TMR0IE_bit:=1;
0x0103	0x168B      	BSF        TMR0IE_bit, BitPos(TMR0IE_bit+0)
;16F676MPPT.mpas,109 :: 		LM358_diff:=cLM358_diff;
0x0104	0x3004      	MOVLW      4
0x0105	0x00BC      	MOVWF      _LM358_diff
;16F676MPPT.mpas,110 :: 		Delay_10ms;
0x0106	0x202B      	CALL       _Delay_10ms
;16F676MPPT.mpas,112 :: 		if Write_OPAMP=0 then begin
0x0107	0x1987      	BTFSC      RC3_bit, BitPos(RC3_bit+0)
0x0108	0x2916      	GOTO       L__main9
;16F676MPPT.mpas,113 :: 		Delay_100ms;
0x0109	0x2037      	CALL       _Delay_100ms
;16F676MPPT.mpas,114 :: 		Delay_100ms;
0x010A	0x2037      	CALL       _Delay_100ms
;16F676MPPT.mpas,115 :: 		Delay_100ms;
0x010B	0x2037      	CALL       _Delay_100ms
;16F676MPPT.mpas,116 :: 		adc_cur:=ADC_Read(0);
0x010C	0x01C6      	CLRF       FARG_ADC_Read_channel
0x010D	0x2043      	CALL       _ADC_Read
0x010E	0x0850      	MOVF       R0, 0
0x010F	0x00C3      	MOVWF      _adc_cur
0x0110	0x0851      	MOVF       R0+1, 0
0x0111	0x00C4      	MOVWF      _adc_cur+1
;16F676MPPT.mpas,117 :: 		EEPROM_Write(0, Lo(adc_cur));
0x0112	0x01C6      	CLRF       FARG_EEPROM_Write_address
0x0113	0x0843      	MOVF       _adc_cur, 0
0x0114	0x00C7      	MOVWF      FARG_EEPROM_Write_data_
0x0115	0x208A      	CALL       _EEPROM_Write
;16F676MPPT.mpas,118 :: 		end;
L__main9:
;16F676MPPT.mpas,122 :: 		Delay_100ms;
0x0116	0x2037      	CALL       _Delay_100ms
;16F676MPPT.mpas,123 :: 		LM358_diff:=EEPROM_Read(0);
0x0117	0x01C6      	CLRF       FARG_EEPROM_Read_address
0x0118	0x20A4      	CALL       _EEPROM_Read
0x0119	0x0850      	MOVF       R0, 0
0x011A	0x00BC      	MOVWF      _LM358_diff
;16F676MPPT.mpas,125 :: 		Inc(LM358_diff);
0x011B	0x0A50      	INCF       R0, 0
0x011C	0x00BC      	MOVWF      _LM358_diff
;16F676MPPT.mpas,127 :: 		IncPWM_EQ:=0;
0x011D	0x01C5      	CLRF       _IncPWM_EQ
;16F676MPPT.mpas,128 :: 		IncPWM_EQ:=EEPROM_Read(3);
0x011E	0x3003      	MOVLW      3
0x011F	0x00C6      	MOVWF      FARG_EEPROM_Read_address
0x0120	0x20A4      	CALL       _EEPROM_Read
0x0121	0x0850      	MOVF       R0, 0
0x0122	0x00C5      	MOVWF      _IncPWM_EQ
;16F676MPPT.mpas,131 :: 		T1CKPS0_bit:=1;               // timer prescaler 1:2
0x0123	0x1283      	BCF        STATUS, 5
0x0124	0x1610      	BSF        T1CKPS0_bit, BitPos(T1CKPS0_bit+0)
;16F676MPPT.mpas,135 :: 		TMR1CS_bit:=0;
0x0125	0x1090      	BCF        TMR1CS_bit, BitPos(TMR1CS_bit+0)
;16F676MPPT.mpas,136 :: 		TMR1L:=TMR1L_LOAD;
0x0126	0x3017      	MOVLW      23
0x0127	0x008E      	MOVWF      TMR1L
;16F676MPPT.mpas,137 :: 		TMR1H:=TMR1H_LOAD;
0x0128	0x30FC      	MOVLW      252
0x0129	0x008F      	MOVWF      TMR1H
;16F676MPPT.mpas,139 :: 		adc_vol:=0;
0x012A	0x01B2      	CLRF       _adc_vol
0x012B	0x01B3      	CLRF       _adc_vol+1
;16F676MPPT.mpas,140 :: 		adc_cur:=0;
0x012C	0x01C3      	CLRF       _adc_cur
0x012D	0x01C4      	CLRF       _adc_cur+1
;16F676MPPT.mpas,141 :: 		power_curr:=0;
0x012E	0x01AE      	CLRF       _power_curr
0x012F	0x01AF      	CLRF       _power_curr+1
0x0130	0x01B0      	CLRF       _power_curr+2
0x0131	0x01B1      	CLRF       _power_curr+3
;16F676MPPT.mpas,142 :: 		vol1:=0;
0x0132	0x01AD      	CLRF       _vol1
;16F676MPPT.mpas,143 :: 		vol2:=0;
0x0133	0x01B4      	CLRF       _vol2
;16F676MPPT.mpas,144 :: 		Reset_Tick100:=100;
0x0134	0x3064      	MOVLW      100
0x0135	0x00B8      	MOVWF      _Reset_Tick100
;16F676MPPT.mpas,145 :: 		Reset_Tick:=Reset_Tick_Start;
0x0136	0x30DC      	MOVLW      220
0x0137	0x00B6      	MOVWF      _Reset_Tick
0x0138	0x3005      	MOVLW      5
0x0139	0x00B7      	MOVWF      _Reset_Tick+1
;16F676MPPT.mpas,147 :: 		GIE_bit:=1;                   // enable Interrupt
0x013A	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;16F676MPPT.mpas,149 :: 		TMR1ON_bit:=1;
0x013B	0x1410      	BSF        TMR1ON_bit, BitPos(TMR1ON_bit+0)
;16F676MPPT.mpas,151 :: 		VOL_PWM:=PWM_LOW;
0x013C	0x3002      	MOVLW      2
0x013D	0x00BF      	MOVWF      _VOL_PWM
;16F676MPPT.mpas,152 :: 		lo_PWM:=PWM_LOW;
0x013E	0x3002      	MOVLW      2
0x013F	0x00B5      	MOVWF      _lo_PWM
;16F676MPPT.mpas,153 :: 		hi_PWM:=PWM_MAX;
0x0140	0x30FF      	MOVLW      255
0x0141	0x00AC      	MOVWF      _hi_PWM
;16F676MPPT.mpas,154 :: 		flag_inc:=True;
0x0142	0x30FF      	MOVLW      255
0x0143	0x00A3      	MOVWF      _flag_inc
;16F676MPPT.mpas,155 :: 		p_equal:=False;
0x0144	0x01A2      	CLRF       _p_equal
;16F676MPPT.mpas,156 :: 		cur_prev:=0;
0x0145	0x01A0      	CLRF       _cur_prev
0x0146	0x01A1      	CLRF       _cur_prev+1
;16F676MPPT.mpas,157 :: 		vol_prev:=0;
0x0147	0x01A4      	CLRF       _vol_prev
0x0148	0x01A5      	CLRF       _vol_prev+1
;16F676MPPT.mpas,160 :: 		while True do begin
L__main12:
0x0149	0x1283      	BCF        STATUS, 5
;16F676MPPT.mpas,162 :: 		if T1IF_bit=1 then begin
0x014A	0x1C0C      	BTFSS      T1IF_bit, BitPos(T1IF_bit+0)
0x014B	0x2959      	GOTO       L__main17
;16F676MPPT.mpas,163 :: 		TMR1H:=TMR1H_LOAD;
0x014C	0x30FC      	MOVLW      252
0x014D	0x008F      	MOVWF      TMR1H
;16F676MPPT.mpas,164 :: 		TMR1L:=TMR1L_LOAD;
0x014E	0x3017      	MOVLW      23
0x014F	0x008E      	MOVWF      TMR1L
;16F676MPPT.mpas,165 :: 		T1IF_bit:=0;
0x0150	0x100C      	BCF        T1IF_bit, BitPos(T1IF_bit+0)
;16F676MPPT.mpas,166 :: 		Inc(TICK_1000);
0x0151	0x0ABE      	INCF       _TICK_1000, 1
;16F676MPPT.mpas,167 :: 		if TICK_1000>=LED1_tm then begin
0x0152	0x083D      	MOVF       _LED1_tm, 0
0x0153	0x023E      	SUBWF      _TICK_1000, 0
0x0154	0x1C03      	BTFSS      STATUS, 0
0x0155	0x2959      	GOTO       L__main20
;16F676MPPT.mpas,168 :: 		LED1:=not LED1;
0x0156	0x3010      	MOVLW      16
0x0157	0x0687      	XORWF      RC4_bit, 1
;16F676MPPT.mpas,169 :: 		TICK_1000:=0;
0x0158	0x01BE      	CLRF       _TICK_1000
;16F676MPPT.mpas,170 :: 		end;
L__main20:
;16F676MPPT.mpas,193 :: 		end;
L__main17:
;16F676MPPT.mpas,194 :: 		if (VOL_PWM>=(PWM_MAX-1)) then
0x0159	0x30FE      	MOVLW      254
0x015A	0x023F      	SUBWF      _VOL_PWM, 0
0x015B	0x1C03      	BTFSS      STATUS, 0
0x015C	0x2960      	GOTO       L__main23
;16F676MPPT.mpas,195 :: 		LED1_tm:=64
0x015D	0x3040      	MOVLW      64
0x015E	0x00BD      	MOVWF      _LED1_tm
0x015F	0x2969      	GOTO       L__main24
;16F676MPPT.mpas,196 :: 		else if (VOL_PWM<=lo_PWM) then
L__main23:
0x0160	0x083F      	MOVF       _VOL_PWM, 0
0x0161	0x0235      	SUBWF      _lo_PWM, 0
0x0162	0x1C03      	BTFSS      STATUS, 0
0x0163	0x2967      	GOTO       L__main26
;16F676MPPT.mpas,197 :: 		LED1_tm:=90
0x0164	0x305A      	MOVLW      90
0x0165	0x00BD      	MOVWF      _LED1_tm
0x0166	0x2969      	GOTO       L__main27
;16F676MPPT.mpas,198 :: 		else
L__main26:
;16F676MPPT.mpas,199 :: 		LED1_tm:=120;
0x0167	0x3078      	MOVLW      120
0x0168	0x00BD      	MOVWF      _LED1_tm
L__main27:
L__main24:
;16F676MPPT.mpas,201 :: 		power_prev:=power_curr;
0x0169	0x082E      	MOVF       _power_curr, 0
0x016A	0x00A8      	MOVWF      _power_prev
0x016B	0x082F      	MOVF       _power_curr+1, 0
0x016C	0x00A9      	MOVWF      _power_prev+1
0x016D	0x0830      	MOVF       _power_curr+2, 0
0x016E	0x00AA      	MOVWF      _power_prev+2
0x016F	0x0831      	MOVF       _power_curr+3, 0
0x0170	0x00AB      	MOVWF      _power_prev+3
;16F676MPPT.mpas,202 :: 		cur_prev:=adc_cur;
0x0171	0x0843      	MOVF       _adc_cur, 0
0x0172	0x00A0      	MOVWF      _cur_prev
0x0173	0x0844      	MOVF       _adc_cur+1, 0
0x0174	0x00A1      	MOVWF      _cur_prev+1
;16F676MPPT.mpas,203 :: 		vol_prev:=adc_vol;
0x0175	0x0832      	MOVF       _adc_vol, 0
0x0176	0x00A4      	MOVWF      _vol_prev
0x0177	0x0833      	MOVF       _adc_vol+1, 0
0x0178	0x00A5      	MOVWF      _vol_prev+1
;16F676MPPT.mpas,205 :: 		adc_vol:=0;
0x0179	0x01B2      	CLRF       _adc_vol
0x017A	0x01B3      	CLRF       _adc_vol+1
;16F676MPPT.mpas,206 :: 		adc_cur:=0;
0x017B	0x01C3      	CLRF       _adc_cur
0x017C	0x01C4      	CLRF       _adc_cur+1
;16F676MPPT.mpas,207 :: 		for i:=0 to adc_max_loop-1 do begin
0x017D	0x01A7      	CLRF       _i
L__main29:
;16F676MPPT.mpas,208 :: 		adc_cur:=adc_cur+ADC_Read(0);
0x017E	0x01C6      	CLRF       FARG_ADC_Read_channel
0x017F	0x2043      	CALL       _ADC_Read
0x0180	0x0850      	MOVF       R0, 0
0x0181	0x07C3      	ADDWF      _adc_cur, 1
0x0182	0x0851      	MOVF       R0+1, 0
0x0183	0x1803      	BTFSC      STATUS, 0
0x0184	0x3E01      	ADDLW      1
0x0185	0x07C4      	ADDWF      _adc_cur+1, 1
;16F676MPPT.mpas,209 :: 		adc_vol:=adc_vol+ADC_Read(2);
0x0186	0x3002      	MOVLW      2
0x0187	0x00C6      	MOVWF      FARG_ADC_Read_channel
0x0188	0x2043      	CALL       _ADC_Read
0x0189	0x0850      	MOVF       R0, 0
0x018A	0x07B2      	ADDWF      _adc_vol, 1
0x018B	0x0851      	MOVF       R0+1, 0
0x018C	0x1803      	BTFSC      STATUS, 0
0x018D	0x3E01      	ADDLW      1
0x018E	0x07B3      	ADDWF      _adc_vol+1, 1
;16F676MPPT.mpas,210 :: 		end;
0x018F	0x0827      	MOVF       _i, 0
0x0190	0x3A00      	XORLW      0
0x0191	0x1903      	BTFSC      STATUS, 2
0x0192	0x2995      	GOTO       L__main32
0x0193	0x0AA7      	INCF       _i, 1
0x0194	0x297E      	GOTO       L__main29
L__main32:
;16F676MPPT.mpas,211 :: 		adc_vol:=adc_vol div adc_max_loop;
;16F676MPPT.mpas,212 :: 		adc_cur:=adc_cur div adc_max_loop;
;16F676MPPT.mpas,214 :: 		if adc_cur>LM358_diff then begin
0x0195	0x0844      	MOVF       _adc_cur+1, 0
0x0196	0x3C00      	SUBLW      0
0x0197	0x1D03      	BTFSS      STATUS, 2
0x0198	0x299B      	GOTO       L__main96
0x0199	0x0843      	MOVF       _adc_cur, 0
0x019A	0x023C      	SUBWF      _LM358_diff, 0
L__main96:
0x019B	0x1803      	BTFSC      STATUS, 0
0x019C	0x2AE3      	GOTO       L__main34
;16F676MPPT.mpas,215 :: 		power_curr:= adc_cur * adc_vol;
0x019D	0x0843      	MOVF       _adc_cur, 0
0x019E	0x00D0      	MOVWF      R0
0x019F	0x0844      	MOVF       _adc_cur+1, 0
0x01A0	0x00D1      	MOVWF      R0+1
0x01A1	0x01D2      	CLRF       R0+2
0x01A2	0x01D3      	CLRF       R0+3
0x01A3	0x0832      	MOVF       _adc_vol, 0
0x01A4	0x00D4      	MOVWF      R4
0x01A5	0x0833      	MOVF       _adc_vol+1, 0
0x01A6	0x00D5      	MOVWF      R4+1
0x01A7	0x01D6      	CLRF       R4+2
0x01A8	0x01D7      	CLRF       R4+3
0x01A9	0x20AF      	CALL       _Mul_32x32_U
0x01AA	0x0850      	MOVF       R0, 0
0x01AB	0x00AE      	MOVWF      _power_curr
0x01AC	0x0851      	MOVF       R0+1, 0
0x01AD	0x00AF      	MOVWF      _power_curr+1
0x01AE	0x0852      	MOVF       R0+2, 0
0x01AF	0x00B0      	MOVWF      _power_curr+2
0x01B0	0x0853      	MOVF       R0+3, 0
0x01B1	0x00B1      	MOVWF      _power_curr+3
;16F676MPPT.mpas,216 :: 		if power_curr=power_prev then begin
0x01B2	0x0853      	MOVF       R0+3, 0
0x01B3	0x062B      	XORWF      _power_prev+3, 0
0x01B4	0x1D03      	BTFSS      STATUS, 2
0x01B5	0x29C0      	GOTO       L__main97
0x01B6	0x0852      	MOVF       R0+2, 0
0x01B7	0x062A      	XORWF      _power_prev+2, 0
0x01B8	0x1D03      	BTFSS      STATUS, 2
0x01B9	0x29C0      	GOTO       L__main97
0x01BA	0x0851      	MOVF       R0+1, 0
0x01BB	0x0629      	XORWF      _power_prev+1, 0
0x01BC	0x1D03      	BTFSS      STATUS, 2
0x01BD	0x29C0      	GOTO       L__main97
0x01BE	0x0850      	MOVF       R0, 0
0x01BF	0x0628      	XORWF      _power_prev, 0
L__main97:
0x01C0	0x1D03      	BTFSS      STATUS, 2
0x01C1	0x2A28      	GOTO       L__main37
;16F676MPPT.mpas,217 :: 		LED1_tm:=240;
0x01C2	0x30F0      	MOVLW      240
0x01C3	0x00BD      	MOVWF      _LED1_tm
;16F676MPPT.mpas,218 :: 		vol2:=0;
0x01C4	0x01B4      	CLRF       _vol2
;16F676MPPT.mpas,219 :: 		Inc_pwm:=1;
0x01C5	0x3001      	MOVLW      1
0x01C6	0x00A6      	MOVWF      _Inc_pwm
;16F676MPPT.mpas,221 :: 		if (not p_equal) or (adc_cur=cur_prev) then begin
0x01C7	0x0922      	COMF       _p_equal, 0
0x01C8	0x00D1      	MOVWF      R1
0x01C9	0x0844      	MOVF       _adc_cur+1, 0
0x01CA	0x0621      	XORWF      _cur_prev+1, 0
0x01CB	0x1D03      	BTFSS      STATUS, 2
0x01CC	0x29CF      	GOTO       L__main98
0x01CD	0x0820      	MOVF       _cur_prev, 0
0x01CE	0x0643      	XORWF      _adc_cur, 0
L__main98:
0x01CF	0x30FF      	MOVLW      255
0x01D0	0x1D03      	BTFSS      STATUS, 2
0x01D1	0x3000      	MOVLW      0
0x01D2	0x00D0      	MOVWF      R0
0x01D3	0x0851      	MOVF       R1, 0
0x01D4	0x04D0      	IORWF      R0, 1
0x01D5	0x1903      	BTFSC      STATUS, 2
0x01D6	0x29F7      	GOTO       L__main40
;16F676MPPT.mpas,222 :: 		if adc_vol<vol_prev then
0x01D7	0x0825      	MOVF       _vol_prev+1, 0
0x01D8	0x0233      	SUBWF      _adc_vol+1, 0
0x01D9	0x1D03      	BTFSS      STATUS, 2
0x01DA	0x29DD      	GOTO       L__main99
0x01DB	0x0824      	MOVF       _vol_prev, 0
0x01DC	0x0232      	SUBWF      _adc_vol, 0
L__main99:
0x01DD	0x1803      	BTFSC      STATUS, 0
0x01DE	0x29E2      	GOTO       L__main43
;16F676MPPT.mpas,223 :: 		flag_inc:=True
0x01DF	0x30FF      	MOVLW      255
0x01E0	0x00A3      	MOVWF      _flag_inc
0x01E1	0x29F7      	GOTO       L__main44
;16F676MPPT.mpas,224 :: 		else if adc_vol>vol_prev then
L__main43:
0x01E2	0x0833      	MOVF       _adc_vol+1, 0
0x01E3	0x0225      	SUBWF      _vol_prev+1, 0
0x01E4	0x1D03      	BTFSS      STATUS, 2
0x01E5	0x29E8      	GOTO       L__main100
0x01E6	0x0832      	MOVF       _adc_vol, 0
0x01E7	0x0224      	SUBWF      _vol_prev, 0
L__main100:
0x01E8	0x1803      	BTFSC      STATUS, 0
0x01E9	0x29EC      	GOTO       L__main46
;16F676MPPT.mpas,225 :: 		flag_inc:=False
0x01EA	0x01A3      	CLRF       _flag_inc
0x01EB	0x29F7      	GOTO       L__main47
;16F676MPPT.mpas,226 :: 		else if adc_cur=cur_prev then begin
L__main46:
0x01EC	0x0844      	MOVF       _adc_cur+1, 0
0x01ED	0x0621      	XORWF      _cur_prev+1, 0
0x01EE	0x1D03      	BTFSS      STATUS, 2
0x01EF	0x29F2      	GOTO       L__main101
0x01F0	0x0820      	MOVF       _cur_prev, 0
0x01F1	0x0643      	XORWF      _adc_cur, 0
L__main101:
0x01F2	0x1D03      	BTFSS      STATUS, 2
0x01F3	0x29F7      	GOTO       L__main49
;16F676MPPT.mpas,227 :: 		p_equal:=True;
0x01F4	0x30FF      	MOVLW      255
0x01F5	0x00A2      	MOVWF      _p_equal
;16F676MPPT.mpas,228 :: 		continue;
0x01F6	0x2949      	GOTO       L__main12
;16F676MPPT.mpas,229 :: 		end;
L__main49:
L__main47:
L__main44:
;16F676MPPT.mpas,230 :: 		end;
L__main40:
;16F676MPPT.mpas,232 :: 		if p_equal or (adc_vol=vol_prev) then begin
0x01F7	0x0833      	MOVF       _adc_vol+1, 0
0x01F8	0x0625      	XORWF      _vol_prev+1, 0
0x01F9	0x1D03      	BTFSS      STATUS, 2
0x01FA	0x29FD      	GOTO       L__main102
0x01FB	0x0824      	MOVF       _vol_prev, 0
0x01FC	0x0632      	XORWF      _adc_vol, 0
L__main102:
0x01FD	0x30FF      	MOVLW      255
0x01FE	0x1D03      	BTFSS      STATUS, 2
0x01FF	0x3000      	MOVLW      0
0x0200	0x00D0      	MOVWF      R0
0x0201	0x0822      	MOVF       _p_equal, 0
0x0202	0x04D0      	IORWF      R0, 1
0x0203	0x1903      	BTFSC      STATUS, 2
0x0204	0x2A25      	GOTO       L__main52
;16F676MPPT.mpas,233 :: 		if adc_cur<cur_prev then
0x0205	0x0821      	MOVF       _cur_prev+1, 0
0x0206	0x0244      	SUBWF      _adc_cur+1, 0
0x0207	0x1D03      	BTFSS      STATUS, 2
0x0208	0x2A0B      	GOTO       L__main103
0x0209	0x0820      	MOVF       _cur_prev, 0
0x020A	0x0243      	SUBWF      _adc_cur, 0
L__main103:
0x020B	0x1803      	BTFSC      STATUS, 0
0x020C	0x2A10      	GOTO       L__main55
;16F676MPPT.mpas,234 :: 		flag_inc:=True
0x020D	0x30FF      	MOVLW      255
0x020E	0x00A3      	MOVWF      _flag_inc
0x020F	0x2A25      	GOTO       L__main56
;16F676MPPT.mpas,235 :: 		else if adc_cur>cur_prev then
L__main55:
0x0210	0x0844      	MOVF       _adc_cur+1, 0
0x0211	0x0221      	SUBWF      _cur_prev+1, 0
0x0212	0x1D03      	BTFSS      STATUS, 2
0x0213	0x2A16      	GOTO       L__main104
0x0214	0x0843      	MOVF       _adc_cur, 0
0x0215	0x0220      	SUBWF      _cur_prev, 0
L__main104:
0x0216	0x1803      	BTFSC      STATUS, 0
0x0217	0x2A1A      	GOTO       L__main58
;16F676MPPT.mpas,236 :: 		flag_inc:=False
0x0218	0x01A3      	CLRF       _flag_inc
0x0219	0x2A25      	GOTO       L__main59
;16F676MPPT.mpas,237 :: 		else if adc_vol=vol_prev then begin
L__main58:
0x021A	0x0833      	MOVF       _adc_vol+1, 0
0x021B	0x0625      	XORWF      _vol_prev+1, 0
0x021C	0x1D03      	BTFSS      STATUS, 2
0x021D	0x2A20      	GOTO       L__main105
0x021E	0x0824      	MOVF       _vol_prev, 0
0x021F	0x0632      	XORWF      _adc_vol, 0
L__main105:
0x0220	0x1D03      	BTFSS      STATUS, 2
0x0221	0x2A25      	GOTO       L__main61
;16F676MPPT.mpas,238 :: 		p_equal:=True;
0x0222	0x30FF      	MOVLW      255
0x0223	0x00A2      	MOVWF      _p_equal
;16F676MPPT.mpas,239 :: 		continue;
0x0224	0x2949      	GOTO       L__main12
;16F676MPPT.mpas,240 :: 		end;
L__main61:
L__main59:
L__main56:
;16F676MPPT.mpas,241 :: 		end;
L__main52:
;16F676MPPT.mpas,242 :: 		p_equal:=True;
0x0225	0x30FF      	MOVLW      255
0x0226	0x00A2      	MOVWF      _p_equal
;16F676MPPT.mpas,243 :: 		end else begin
0x0227	0x2AE2      	GOTO       L__main38
L__main37:
;16F676MPPT.mpas,244 :: 		p_equal:=False;
0x0228	0x01A2      	CLRF       _p_equal
;16F676MPPT.mpas,245 :: 		if Inc_pwm<Inc_Pwm_Max then
0x0229	0x3008      	MOVLW      8
0x022A	0x0226      	SUBWF      _Inc_pwm, 0
0x022B	0x1803      	BTFSC      STATUS, 0
0x022C	0x2A2E      	GOTO       L__main64
;16F676MPPT.mpas,246 :: 		Inc(Inc_pwm);
0x022D	0x0AA6      	INCF       _Inc_pwm, 1
L__main64:
;16F676MPPT.mpas,247 :: 		if power_curr<power_prev then begin
0x022E	0x082B      	MOVF       _power_prev+3, 0
0x022F	0x0231      	SUBWF      _power_curr+3, 0
0x0230	0x1D03      	BTFSS      STATUS, 2
0x0231	0x2A3C      	GOTO       L__main106
0x0232	0x082A      	MOVF       _power_prev+2, 0
0x0233	0x0230      	SUBWF      _power_curr+2, 0
0x0234	0x1D03      	BTFSS      STATUS, 2
0x0235	0x2A3C      	GOTO       L__main106
0x0236	0x0829      	MOVF       _power_prev+1, 0
0x0237	0x022F      	SUBWF      _power_curr+1, 0
0x0238	0x1D03      	BTFSS      STATUS, 2
0x0239	0x2A3C      	GOTO       L__main106
0x023A	0x0828      	MOVF       _power_prev, 0
0x023B	0x022E      	SUBWF      _power_curr, 0
L__main106:
0x023C	0x1803      	BTFSC      STATUS, 0
0x023D	0x2AE0      	GOTO       L__main67
;16F676MPPT.mpas,249 :: 		vol1:=VOL_PWM;
0x023E	0x083F      	MOVF       _VOL_PWM, 0
0x023F	0x00AD      	MOVWF      _vol1
;16F676MPPT.mpas,250 :: 		flag_inc:=not flag_inc;
0x0240	0x09A3      	COMF       _flag_inc, 1
;16F676MPPT.mpas,252 :: 		if vol2<>0 then begin
0x0241	0x0834      	MOVF       _vol2, 0
0x0242	0x3A00      	XORLW      0
0x0243	0x1903      	BTFSC      STATUS, 2
0x0244	0x2ADF      	GOTO       L__main70
;16F676MPPT.mpas,253 :: 		Inc_pwm:=1;
0x0245	0x3001      	MOVLW      1
0x0246	0x00A6      	MOVWF      _Inc_pwm
;16F676MPPT.mpas,254 :: 		wPWM:=vol1;
0x0247	0x082D      	MOVF       _vol1, 0
0x0248	0x00B9      	MOVWF      _wPWM
0x0249	0x01BA      	CLRF       _wPWM+1
;16F676MPPT.mpas,255 :: 		wPWM:=(wPWM+vol2+1) div 2+3; { >=3 }
0x024A	0x0834      	MOVF       _vol2, 0
0x024B	0x07B9      	ADDWF      _wPWM, 1
0x024C	0x1803      	BTFSC      STATUS, 0
0x024D	0x0ABA      	INCF       _wPWM+1, 1
0x024E	0x0AB9      	INCF       _wPWM, 1
0x024F	0x1903      	BTFSC      STATUS, 2
0x0250	0x0ABA      	INCF       _wPWM+1, 1
0x0251	0x0CBA      	RRF        _wPWM+1, 1
0x0252	0x0CB9      	RRF        _wPWM, 1
0x0253	0x13BA      	BCF        _wPWM+1, 7
0x0254	0x3003      	MOVLW      3
0x0255	0x07B9      	ADDWF      _wPWM, 1
0x0256	0x1803      	BTFSC      STATUS, 0
0x0257	0x0ABA      	INCF       _wPWM+1, 1
;16F676MPPT.mpas,256 :: 		if (Hi(wPWM)<>0) or (Lo(wPWM)>PWM_MAX) then
0x0258	0x083A      	MOVF       _wPWM+1, 0
0x0259	0x3A00      	XORLW      0
0x025A	0x30FF      	MOVLW      255
0x025B	0x1903      	BTFSC      STATUS, 2
0x025C	0x3000      	MOVLW      0
0x025D	0x00D1      	MOVWF      R1
0x025E	0x0839      	MOVF       _wPWM, 0
0x025F	0x3CFF      	SUBLW      255
0x0260	0x30FF      	MOVLW      255
0x0261	0x1803      	BTFSC      STATUS, 0
0x0262	0x3000      	MOVLW      0
0x0263	0x00D0      	MOVWF      R0
0x0264	0x0851      	MOVF       R1, 0
0x0265	0x04D0      	IORWF      R0, 1
0x0266	0x1903      	BTFSC      STATUS, 2
0x0267	0x2A6D      	GOTO       L__main73
;16F676MPPT.mpas,257 :: 		wPWM:=word(PWM_MAX)
0x0268	0x30FF      	MOVLW      255
0x0269	0x00B9      	MOVWF      _wPWM
0x026A	0x3000      	MOVLW      0
0x026B	0x00BA      	MOVWF      _wPWM+1
0x026C	0x2A75      	GOTO       L__main74
;16F676MPPT.mpas,258 :: 		else if Lo(wPWM)<PWM_LOW then
L__main73:
0x026D	0x3002      	MOVLW      2
0x026E	0x0239      	SUBWF      _wPWM, 0
0x026F	0x1803      	BTFSC      STATUS, 0
0x0270	0x2A75      	GOTO       L__main76
;16F676MPPT.mpas,259 :: 		wPWM:=word(PWM_LOW);
0x0271	0x3002      	MOVLW      2
0x0272	0x00B9      	MOVWF      _wPWM
0x0273	0x3000      	MOVLW      0
0x0274	0x00BA      	MOVWF      _wPWM+1
L__main76:
L__main74:
;16F676MPPT.mpas,261 :: 		VOL_PWM:=lo(wPWM);
0x0275	0x0839      	MOVF       _wPWM, 0
0x0276	0x00BF      	MOVWF      _VOL_PWM
;16F676MPPT.mpas,263 :: 		vol2:=0;
0x0277	0x01B4      	CLRF       _vol2
;16F676MPPT.mpas,265 :: 		wPWM:=(word(PWM_MAX-VOL_PWM)+((PWMHI_DIV+1) div 2)) div PWMHI_DIV;
0x0278	0x0839      	MOVF       _wPWM, 0
0x0279	0x3CFF      	SUBLW      255
0x027A	0x00D0      	MOVWF      R0
0x027B	0x3000      	MOVLW      0
0x027C	0x1C03      	BTFSS      STATUS, 0
0x027D	0x3E01      	ADDLW      1
0x027E	0x01D1      	CLRF       R0+1
0x027F	0x02D1      	SUBWF      R0+1, 1
0x0280	0x3003      	MOVLW      3
0x0281	0x07D0      	ADDWF      R0, 1
0x0282	0x1803      	BTFSC      STATUS, 0
0x0283	0x0AD1      	INCF       R0+1, 1
0x0284	0x3006      	MOVLW      6
0x0285	0x00D4      	MOVWF      R4
0x0286	0x01D5      	CLRF       R4+1
0x0287	0x206D      	CALL       _Div_16x16_U
0x0288	0x0850      	MOVF       R0, 0
0x0289	0x00B9      	MOVWF      _wPWM
0x028A	0x0851      	MOVF       R0+1, 0
0x028B	0x00BA      	MOVWF      _wPWM+1
;16F676MPPT.mpas,266 :: 		wPWM:=wPWM+word(VOL_PWM);
0x028C	0x083F      	MOVF       _VOL_PWM, 0
0x028D	0x00D2      	MOVWF      R2
0x028E	0x01D3      	CLRF       R2+1
0x028F	0x0852      	MOVF       R2, 0
0x0290	0x0750      	ADDWF      R0, 0
0x0291	0x00B9      	MOVWF      _wPWM
0x0292	0x0851      	MOVF       R0+1, 0
0x0293	0x1803      	BTFSC      STATUS, 0
0x0294	0x3E01      	ADDLW      1
0x0295	0x0753      	ADDWF      R2+1, 0
0x0296	0x00BA      	MOVWF      _wPWM+1
;16F676MPPT.mpas,267 :: 		if (Hi(wPWM)<>0) or (Lo(wPWM)>PWM_MAX) then
0x0297	0x083A      	MOVF       _wPWM+1, 0
0x0298	0x3A00      	XORLW      0
0x0299	0x30FF      	MOVLW      255
0x029A	0x1903      	BTFSC      STATUS, 2
0x029B	0x3000      	MOVLW      0
0x029C	0x00D1      	MOVWF      R1
0x029D	0x0839      	MOVF       _wPWM, 0
0x029E	0x3CFF      	SUBLW      255
0x029F	0x30FF      	MOVLW      255
0x02A0	0x1803      	BTFSC      STATUS, 0
0x02A1	0x3000      	MOVLW      0
0x02A2	0x00D0      	MOVWF      R0
0x02A3	0x0851      	MOVF       R1, 0
0x02A4	0x04D0      	IORWF      R0, 1
0x02A5	0x1903      	BTFSC      STATUS, 2
0x02A6	0x2AAA      	GOTO       L__main79
;16F676MPPT.mpas,268 :: 		wPWM:=PWM_MAX;
0x02A7	0x30FF      	MOVLW      255
0x02A8	0x00B9      	MOVWF      _wPWM
0x02A9	0x01BA      	CLRF       _wPWM+1
L__main79:
;16F676MPPT.mpas,269 :: 		hi_PWM:=lo(wPWM);
0x02AA	0x0839      	MOVF       _wPWM, 0
0x02AB	0x00AC      	MOVWF      _hi_PWM
;16F676MPPT.mpas,271 :: 		wPWM:=(word(VOL_PWM-PWM_LOW)+((PWMLO_DIV+1) div 2)) div PWMLO_DIV;
0x02AC	0x3002      	MOVLW      2
0x02AD	0x023F      	SUBWF      _VOL_PWM, 0
0x02AE	0x00D0      	MOVWF      R0
0x02AF	0x3000      	MOVLW      0
0x02B0	0x1C03      	BTFSS      STATUS, 0
0x02B1	0x3E01      	ADDLW      1
0x02B2	0x01D1      	CLRF       R0+1
0x02B3	0x02D1      	SUBWF      R0+1, 1
0x02B4	0x3008      	MOVLW      8
0x02B5	0x07D0      	ADDWF      R0, 1
0x02B6	0x1803      	BTFSC      STATUS, 0
0x02B7	0x0AD1      	INCF       R0+1, 1
0x02B8	0x300F      	MOVLW      15
0x02B9	0x00D4      	MOVWF      R4
0x02BA	0x01D5      	CLRF       R4+1
0x02BB	0x206D      	CALL       _Div_16x16_U
0x02BC	0x0850      	MOVF       R0, 0
0x02BD	0x00B9      	MOVWF      _wPWM
0x02BE	0x0851      	MOVF       R0+1, 0
0x02BF	0x00BA      	MOVWF      _wPWM+1
;16F676MPPT.mpas,272 :: 		wPWM:=word(VOL_PWM)-wPWM;
0x02C0	0x083F      	MOVF       _VOL_PWM, 0
0x02C1	0x00B9      	MOVWF      _wPWM
0x02C2	0x01BA      	CLRF       _wPWM+1
0x02C3	0x0850      	MOVF       R0, 0
0x02C4	0x02B9      	SUBWF      _wPWM, 1
0x02C5	0x1C03      	BTFSS      STATUS, 0
0x02C6	0x03BA      	DECF       _wPWM+1, 1
0x02C7	0x0851      	MOVF       R0+1, 0
0x02C8	0x02BA      	SUBWF      _wPWM+1, 1
;16F676MPPT.mpas,273 :: 		if (Hi(wPWM)<>0) or (Lo(wPWM)<PWM_LOW) then
0x02C9	0x083A      	MOVF       _wPWM+1, 0
0x02CA	0x3A00      	XORLW      0
0x02CB	0x30FF      	MOVLW      255
0x02CC	0x1903      	BTFSC      STATUS, 2
0x02CD	0x3000      	MOVLW      0
0x02CE	0x00D1      	MOVWF      R1
0x02CF	0x3002      	MOVLW      2
0x02D0	0x0239      	SUBWF      _wPWM, 0
0x02D1	0x30FF      	MOVLW      255
0x02D2	0x1803      	BTFSC      STATUS, 0
0x02D3	0x3000      	MOVLW      0
0x02D4	0x00D0      	MOVWF      R0
0x02D5	0x0851      	MOVF       R1, 0
0x02D6	0x04D0      	IORWF      R0, 1
0x02D7	0x1903      	BTFSC      STATUS, 2
0x02D8	0x2ADC      	GOTO       L__main82
;16F676MPPT.mpas,274 :: 		wPWM:=PWM_LOW;
0x02D9	0x3002      	MOVLW      2
0x02DA	0x00B9      	MOVWF      _wPWM
0x02DB	0x01BA      	CLRF       _wPWM+1
L__main82:
;16F676MPPT.mpas,275 :: 		lo_PWM:=lo(wPWM);
0x02DC	0x0839      	MOVF       _wPWM, 0
0x02DD	0x00B5      	MOVWF      _lo_PWM
;16F676MPPT.mpas,276 :: 		continue;
0x02DE	0x2949      	GOTO       L__main12
;16F676MPPT.mpas,277 :: 		end;
L__main70:
;16F676MPPT.mpas,278 :: 		end else begin
0x02DF	0x2AE2      	GOTO       L__main68
L__main67:
;16F676MPPT.mpas,280 :: 		vol2:=VOL_PWM;
0x02E0	0x083F      	MOVF       _VOL_PWM, 0
0x02E1	0x00B4      	MOVWF      _vol2
;16F676MPPT.mpas,281 :: 		end;
L__main68:
;16F676MPPT.mpas,282 :: 		end;
L__main38:
;16F676MPPT.mpas,283 :: 		end else begin
0x02E2	0x2AF5      	GOTO       L__main35
L__main34:
;16F676MPPT.mpas,285 :: 		power_curr:=0;
0x02E3	0x01AE      	CLRF       _power_curr
0x02E4	0x01AF      	CLRF       _power_curr+1
0x02E5	0x01B0      	CLRF       _power_curr+2
0x02E6	0x01B1      	CLRF       _power_curr+3
;16F676MPPT.mpas,286 :: 		Inc_pwm:=Inc_Pwm_Max;
0x02E7	0x3008      	MOVLW      8
0x02E8	0x00A6      	MOVWF      _Inc_pwm
;16F676MPPT.mpas,287 :: 		flag_inc:=True;
0x02E9	0x30FF      	MOVLW      255
0x02EA	0x00A3      	MOVWF      _flag_inc
;16F676MPPT.mpas,288 :: 		vol2:=0;
0x02EB	0x01B4      	CLRF       _vol2
;16F676MPPT.mpas,289 :: 		adc_cur:=0;
0x02EC	0x01C3      	CLRF       _adc_cur
0x02ED	0x01C4      	CLRF       _adc_cur+1
;16F676MPPT.mpas,290 :: 		adc_vol:=0;
0x02EE	0x01B2      	CLRF       _adc_vol
0x02EF	0x01B3      	CLRF       _adc_vol+1
;16F676MPPT.mpas,291 :: 		lo_PWM:=PWM_LOW;
0x02F0	0x3002      	MOVLW      2
0x02F1	0x00B5      	MOVWF      _lo_PWM
;16F676MPPT.mpas,292 :: 		hi_PWM:=PWM_MAX;
0x02F2	0x30FF      	MOVLW      255
0x02F3	0x00AC      	MOVWF      _hi_PWM
;16F676MPPT.mpas,293 :: 		p_equal:=False;
0x02F4	0x01A2      	CLRF       _p_equal
;16F676MPPT.mpas,294 :: 		end;
L__main35:
;16F676MPPT.mpas,296 :: 		if flag_inc then begin
0x02F5	0x0823      	MOVF       _flag_inc, 0
0x02F6	0x1903      	BTFSC      STATUS, 2
0x02F7	0x2B06      	GOTO       L__main85
;16F676MPPT.mpas,297 :: 		if VOL_PWM<(hi_PWM-Inc_pwm) then begin
0x02F8	0x0826      	MOVF       _Inc_pwm, 0
0x02F9	0x022C      	SUBWF      _hi_PWM, 0
0x02FA	0x00D1      	MOVWF      R1
0x02FB	0x0851      	MOVF       R1, 0
0x02FC	0x023F      	SUBWF      _VOL_PWM, 0
0x02FD	0x1803      	BTFSC      STATUS, 0
0x02FE	0x2B02      	GOTO       L__main88
;16F676MPPT.mpas,298 :: 		VOL_PWM:=VOL_PWM+Inc_pwm;
0x02FF	0x0826      	MOVF       _Inc_pwm, 0
0x0300	0x07BF      	ADDWF      _VOL_PWM, 1
;16F676MPPT.mpas,299 :: 		end else begin
0x0301	0x2B05      	GOTO       L__main89
L__main88:
;16F676MPPT.mpas,300 :: 		VOL_PWM:=hi_PWM;
0x0302	0x082C      	MOVF       _hi_PWM, 0
0x0303	0x00BF      	MOVWF      _VOL_PWM
;16F676MPPT.mpas,301 :: 		flag_inc:=False;
0x0304	0x01A3      	CLRF       _flag_inc
;16F676MPPT.mpas,302 :: 		end;
L__main89:
;16F676MPPT.mpas,303 :: 		end else begin
0x0305	0x2B1A      	GOTO       L__main86
L__main85:
;16F676MPPT.mpas,304 :: 		if (VOL_PWM-lo_PWM)>(Inc_Pwm_Max+1-Inc_pwm) then begin
0x0306	0x0835      	MOVF       _lo_PWM, 0
0x0307	0x023F      	SUBWF      _VOL_PWM, 0
0x0308	0x00D2      	MOVWF      R2
0x0309	0x0826      	MOVF       _Inc_pwm, 0
0x030A	0x3C09      	SUBLW      9
0x030B	0x00D1      	MOVWF      R1
0x030C	0x0852      	MOVF       R2, 0
0x030D	0x0251      	SUBWF      R1, 0
0x030E	0x1803      	BTFSC      STATUS, 0
0x030F	0x2B16      	GOTO       L__main91
;16F676MPPT.mpas,305 :: 		VOL_PWM:=VOL_PWM-(Inc_Pwm_Max+1-Inc_pwm);
0x0310	0x0826      	MOVF       _Inc_pwm, 0
0x0311	0x3C09      	SUBLW      9
0x0312	0x00D0      	MOVWF      R0
0x0313	0x0850      	MOVF       R0, 0
0x0314	0x02BF      	SUBWF      _VOL_PWM, 1
;16F676MPPT.mpas,306 :: 		end else begin
0x0315	0x2B1A      	GOTO       L__main92
L__main91:
;16F676MPPT.mpas,307 :: 		VOL_PWM:=lo_PWM;
0x0316	0x0835      	MOVF       _lo_PWM, 0
0x0317	0x00BF      	MOVWF      _VOL_PWM
;16F676MPPT.mpas,308 :: 		flag_inc:=True;
0x0318	0x30FF      	MOVLW      255
0x0319	0x00A3      	MOVWF      _flag_inc
;16F676MPPT.mpas,309 :: 		end;
L__main92:
;16F676MPPT.mpas,310 :: 		end;
L__main86:
;16F676MPPT.mpas,311 :: 		end;
0x031A	0x2949      	GOTO       L__main12
;16F676MPPT.mpas,312 :: 		end.
L_end_main:
0x031B	0x2B1B      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [33]    _Interrupt
0x0025       [6]    _Delay_22us
0x002B      [12]    _Delay_10ms
0x0037      [12]    _Delay_100ms
0x0043      [42]    _ADC_Read
0x006D      [29]    _Div_16x16_U
0x008A      [26]    _EEPROM_Write
0x00A4      [11]    _EEPROM_Read
0x00AF      [55]    _Mul_32x32_U
0x00E6     [566]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0001       [1]    TMR0
0x0003       [1]    STATUS
0x0007       [0]    LED1
0x0007       [0]    PWM_SIG
0x0007       [0]    Write_OPAMP
0x0007       [0]    RC1_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC3_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    GIE_bit
0x000B       [1]    INTCON
0x000B       [0]    T0IF_bit
0x000C       [0]    T1IF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1CS_bit
0x0019       [1]    CMCON
0x001E       [1]    ADRESH
0x001F       [0]    VCFG_bit
0x001F       [0]    ADFM_bit
0x001F       [0]    CHS1_bit
0x001F       [1]    ADCON0
0x0020       [2]    _cur_prev
0x0022       [1]    _p_equal
0x0023       [1]    _flag_inc
0x0024       [2]    _vol_prev
0x0026       [1]    _Inc_pwm
0x0027       [1]    _i
0x0028       [4]    _power_prev
0x002C       [1]    _hi_PWM
0x002D       [1]    _vol1
0x002E       [4]    _power_curr
0x0032       [2]    _adc_vol
0x0034       [1]    _vol2
0x0035       [1]    _lo_PWM
0x0036       [2]    _Reset_Tick
0x0038       [1]    _Reset_Tick100
0x0039       [2]    _wPWM
0x003B       [0]    _PWM_FLAG
0x003C       [1]    _LM358_diff
0x003D       [1]    _LED1_tm
0x003E       [1]    _TICK_1000
0x003F       [1]    _VOL_PWM
0x0040       [1]    _ON_PWM
0x0041       [1]    ___saveSTATUS
0x0042       [1]    ___savePCLATH
0x0043       [2]    _adc_cur
0x0045       [1]    _IncPWM_EQ
0x0046       [1]    FARG_EEPROM_Write_address
0x0046       [1]    FARG_EEPROM_Read_address
0x0046       [1]    FARG_ADC_Read_channel
0x0047       [1]    FARG_EEPROM_Write_data_
0x0047       [2]    ADC_Read_local_result
0x0050       [1]    R0
0x0051       [1]    R1
0x0052       [1]    R2
0x0053       [1]    R3
0x0054       [1]    R4
0x0055       [1]    R5
0x0056       [1]    R6
0x0057       [1]    R7
0x0058       [1]    R8
0x0059       [1]    R9
0x005A       [1]    R10
0x005B       [1]    R11
0x005C       [1]    R12
0x005D       [1]    R13
0x005E       [1]    R14
0x005F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA0_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC4_bit
0x0091       [1]    ANSEL
0x009A       [1]    EEDATA
0x009B       [1]    EEADR
0x009C       [1]    EECON1
0x009D       [1]    EECON2
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
